Lng = as.numeric(vapply(tmp, "[", "", 2, USE.NAMES = FALSE)),
counts = vapply(latlng, length, 0L, USE.NAMES = FALSE))
return(out)
}
heat <- bring_heat(geos)
pal <- colorBin("YlOrRd", domain = seq(0, max(heat$counts)))
pal
max(heat$counts)
head(pal(heat$counts))
hist(heat$counts)
hist(log(heat$counts))
head(log(heat$counts))
head(log(heat$counts) + 1)
head(round(log(heat$counts) + 1))
head(round(log(heat$counts) + 1), 200)
heat$counts <- round(log(heat$counts) + 1)
runApp()
runApp()
?dateInput
z3 <- httr::GET("https://api.pelagicdata.com/api/VLxEDznakTkiJtu34Lq2/v1/points/2018-06-01/2018-06-30",
httr::authenticate("shaunpwilkinson@gmail.com", "VespaLX50"))
availdata5 <- readr::read_csv(httr::content(z3, "raw"))
availdata <- rbind(availdata1, availdata2, availdata3, availdata4, availdata5)
availdata <- availdata[!is.na(availdata$Trip), ] #68350
availdata$Lat <- round(availdata$Lat, 3)
availdata$Lng <- round(availdata$Lng, 3)
availdata <- availdata[!duplicated(availdata[c("Trip", "Lat", "Lng")]), ] #12877
availdata$latlng <- paste0(availdata$Lat, ",", availdata$Lng)
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user='wilko_sql1229113', password='R1fDe1QDB6',
dbname='wilko_peskaDAT', host='johnny.heliohost.org', port=3306)
RMySQL::dbWriteTable(peskaDAT, "geo", availdata, row.names=FALSE, overwrite = TRUE)
RMySQL::dbDisconnect(peskaDAT)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?column
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinyWidgets")
runApp()
runApp()
q()
shiny::runApp()
runApp()
?leafletOutput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?h0
?h1
runApp()
runApp()
runApp()
?headerPanel
runApp()
runApp()
runApp()
runApp()
runApp()
?addTiles
?tileOptions(
)
runApp()
runApp()
totdata <- readRDS("data/totdata.rds")
View(totdata)
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user='wilko_sql1229113', password='R1fDe1QDB6',
dbname='wilko_peskaDAT', host='johnny.heliohost.org', port=3306)
lndgs <- RMySQL::dbReadTable(peskaDAT, "landings")
trps <- RMySQL::dbReadTable(peskaDAT, "trips")
munis <- RMySQL::dbReadTable(peskaDAT, "municipalities")
stns <- RMySQL::dbReadTable(peskaDAT, "stations")
spcs <-  RMySQL::dbReadTable(peskaDAT, "species")
geos <- RMySQL::dbReadTable(peskaDAT, "geo")
dbDisconnect(peskaDAT)
trps$gear <- match(trps$gear, c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP"))
trps$station <- stns$municipio[match(trps$station, stns$station)]
trps$trip_hours[trps$trip_hours == 0] <- 3
trps$trip_hours[trps$trip_hours > 72] <- 72
## gear match must be before discard step
discards <- lndgs$trip_id[!(lndgs$flag %in% c(0L, 4L, 5L))]## trip ids
trpnas <- is.na(trps$station) | is.na(trps$habitat) | is.na(trps$gear) | is.na(trps$trip_effort) #logical
discards <- c(discards, trps$trip_id[trpnas])
lndnas <- is.na(lndgs$weight_g)
discards <- c(discards, lndgs$trip_id[lndnas])
trps$date <- as.Date(trps$date)
datnas <- trps$date < as.Date("2016-09-01") | trps$date >= lubridate::floor_date(Sys.Date(), unit = "day")
discards <- c(discards, trps$trip_id[datnas])
discards <- unique(discards)
trps <- trps[!(trps$trip_id %in% discards), ]
lndgs <- lndgs[!(lndgs$trip_id %in% discards), ]
lndgs$KG <- lndgs$weight_g/1000
## next 2 lines = 10x faster than aggregate
tmp <- split(lndgs$KG, f = factor(lndgs$trip_id, levels = trps$trip_id), drop = FALSE)
trps$KG <- vapply(tmp, sum, 0, USE.NAMES = FALSE)
## date landings tab (day not month)
tmp <- structure(trps$date, names = trps$trip_id)
lndgs$date <- tmp[lndgs$trip_id]
sites <- c("Viqueque","Lautem","Manatuto","Liquica","Bobonaro","Covalima",
"Manufahi","Ainaro","Baucau","Dili","Oe-Cusse", "Atauro")
habitats <- c("Reef/Ahu ruin","FAD/Rumpon","Deep/Tasi kle'an","Beach/Tasi ninin",
"Traditional FAD/Rumpon bamboo","Mangrove/Aiparapa","Gleaning/Meti")
gears <- c("Gillnet/Redi","Handline/Hakail","Longline/Hakail naruk","Spear/Kilat","Cast net/Dai",
"Manual/Meti","Beach seine/Redi tasi ninin", "Seine net/Lampara","Trap/Bubur")
boat_types <- c("Canoe", "Motor")
RMySQL::dbDisconnect(peskaDAT)
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user='wilko_sql1229113', password='R1fDe1QDB6',
dbname='wilko_peskaDAT', host='johnny.heliohost.org', port=3306)
lndgs <- RMySQL::dbReadTable(peskaDAT, "landings")
RMySQL::dbDisconnect(peskaDAT)
## month should be a factor, make sure all poss levels are included
trps$month <- factor(lubridate::floor_date(trps$date, unit = "month"), levels = datelevels)
dateseq <- seq.Date(from = input$startDate, to = input$endDate, by = 1)
datelevels <- as.character(unique(lubridate::floor_date(dateseq, unit = "month")))
trps$month <- factor(lubridate::floor_date(trps$date, unit = "month"), levels = datelevels)
datelevels <- as.character(unique(lubridate::floor_date(dateseq, unit = "month")))
trps$month <- factor(lubridate::floor_date(trps$date, unit = "month"), levels = datelevels)
dateseq <- seq.Date(from = as.Date("2018-04-01"), to = as.Date("2019-03-31"), by = 1)
datelevels <- as.character(unique(lubridate::floor_date(dateseq, unit = "month")))
trps$month <- factor(lubridate::floor_date(trps$date, unit = "month"), levels = datelevels)
allhabselected <- T
allgearselected <- T
c("Month", "Reported fishing days", "Reported trips",
"Reported effort (hours)", "Reported catch (KG)",
"CPUE (KG/hour)", "Estimated national catch (T)")
monthlyCPUE <- aggregate(trps[c("KG", "trip_hours")], by = trps["month"], sum, drop = FALSE)
monthlyCPUE$month <- as.Date(as.character(monthlyCPUE$month))
View(monthlyCPUE)
monthlyCPUE <- monthlyCPUE[order(monthlyCPUE$month),]
monthlyCPUE$CPUE <- monthlyCPUE$KG/monthlyCPUE$trip_hours
monthlyCPUE$trips <- table(trps$month)
f <- function(d) length(unique(d))
monthlyCPUE$fishing_days <- aggregate(trps$date, by = list(trps$month), f, drop = FALSE)[[2]]
monthlyCPUE$KG[is.na(monthlyCPUE$KG)] <- 0
View(trps)
trps$gear <- match(trps$gear, c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP"))
trps$station <- stns$municipio[match(trps$station, stns$station)]
trps$trip_hours[trps$trip_hours == 0] <- 3
trps$trip_hours[trps$trip_hours > 72] <- 72
## gear match must be before discard step
discards <- lndgs$trip_id[!(lndgs$flag %in% c(0L, 4L, 5L))]## trip ids
trpnas <- is.na(trps$station) | is.na(trps$habitat) | is.na(trps$gear) | is.na(trps$trip_effort) #logical
discards <- c(discards, trps$trip_id[trpnas])
lndnas <- is.na(lndgs$weight_g)
discards <- c(discards, lndgs$trip_id[lndnas])
trps$date <- as.Date(trps$date)
datnas <- trps$date < as.Date("2016-09-01") | trps$date >= lubridate::floor_date(Sys.Date(), unit = "day")
discards <- c(discards, trps$trip_id[datnas])
discards <- unique(discards)
trps <- trps[!(trps$trip_id %in% discards), ]
lndgs <- lndgs[!(lndgs$trip_id %in% discards), ]
lndgs$KG <- lndgs$weight_g/1000
## next 2 lines = 10x faster than aggregate
tmp <- split(lndgs$KG, f = factor(lndgs$trip_id, levels = trps$trip_id), drop = FALSE)
trps$KG <- vapply(tmp, sum, 0, USE.NAMES = FALSE)
## date landings tab (day not month)
tmp <- structure(trps$date, names = trps$trip_id)
lndgs$date <- tmp[lndgs$trip_id]
sites <- c("Viqueque","Lautem","Manatuto","Liquica","Bobonaro","Covalima",
"Manufahi","Ainaro","Baucau","Dili","Oe-Cusse", "Atauro")
habitats <- c("Reef/Ahu ruin","FAD/Rumpon","Deep/Tasi kle'an","Beach/Tasi ninin",
"Traditional FAD/Rumpon bamboo","Mangrove/Aiparapa","Gleaning/Meti")
gears <- c("Gillnet/Redi","Handline/Hakail","Longline/Hakail naruk","Spear/Kilat","Cast net/Dai",
"Manual/Meti","Beach seine/Redi tasi ninin", "Seine net/Lampara","Trap/Bubur")
boat_types <- c("Canoe", "Motor")
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user='wilko_sql1229113', password='R1fDe1QDB6',
dbname='wilko_peskaDAT', host='johnny.heliohost.org', port=3306)
lndgs <- RMySQL::dbReadTable(peskaDAT, "landings")
trps <- RMySQL::dbReadTable(peskaDAT, "trips")
munis <- RMySQL::dbReadTable(peskaDAT, "municipalities")
stns <- RMySQL::dbReadTable(peskaDAT, "stations")
spcs <-  RMySQL::dbReadTable(peskaDAT, "species")
# geos <- RMySQL::dbReadTable(peskaDAT, "geo")
RMySQL::dbDisconnect(peskaDAT)
trps$gear <- match(trps$gear, c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP"))
trps$station <- stns$municipio[match(trps$station, stns$station)]
trps$trip_hours[trps$trip_hours == 0] <- 3
trps$trip_hours[trps$trip_hours > 72] <- 72
## gear match must be before discard step
discards <- lndgs$trip_id[!(lndgs$flag %in% c(0L, 4L, 5L))]## trip ids
trpnas <- is.na(trps$station) | is.na(trps$habitat) | is.na(trps$gear) | is.na(trps$trip_effort) #logical
discards <- c(discards, trps$trip_id[trpnas])
lndnas <- is.na(lndgs$weight_g)
discards <- c(discards, lndgs$trip_id[lndnas])
trps$date <- as.Date(trps$date)
datnas <- trps$date < as.Date("2016-09-01") | trps$date >= lubridate::floor_date(Sys.Date(), unit = "day")
discards <- c(discards, trps$trip_id[datnas])
discards <- unique(discards)
trps <- trps[!(trps$trip_id %in% discards), ]
lndgs <- lndgs[!(lndgs$trip_id %in% discards), ]
lndgs$KG <- lndgs$weight_g/1000
## next 2 lines = 10x faster than aggregate
tmp <- split(lndgs$KG, f = factor(lndgs$trip_id, levels = trps$trip_id), drop = FALSE)
trps$KG <- vapply(tmp, sum, 0, USE.NAMES = FALSE)
## date landings tab (day not month)
tmp <- structure(trps$date, names = trps$trip_id)
lndgs$date <- tmp[lndgs$trip_id]
sites <- c("Viqueque","Lautem","Manatuto","Liquica","Bobonaro","Covalima",
"Manufahi","Ainaro","Baucau","Dili","Oe-Cusse", "Atauro")
habitats <- c("Reef/Ahu ruin","FAD/Rumpon","Deep/Tasi kle'an","Beach/Tasi ninin",
"Traditional FAD/Rumpon bamboo","Mangrove/Aiparapa","Gleaning/Meti")
gears <- c("Gillnet/Redi","Handline/Hakail","Longline/Hakail naruk","Spear/Kilat","Cast net/Dai",
"Manual/Meti","Beach seine/Redi tasi ninin", "Seine net/Lampara","Trap/Bubur")
boat_types <- c("Canoe", "Motor")
trps <- trps[trps$date > as.Date("2018-04-01") & trps$date < as.Date("2019-03-31"), ]
lndgs <- lndgs[lndgs$date > as.Date("2018-04-01") & lndgs$date < as.Date("2019-03-31"), ]
dateseq <- seq.Date(from = as.Date("2018-04-01"), to = as.Date("2019-03-31"), by = 1)
datelevels <- as.character(unique(lubridate::floor_date(dateseq, unit = "month")))
trps$month <- factor(lubridate::floor_date(trps$date, unit = "month"), levels = datelevels)
allhabselected <- T
allgearselected <- T
monthlyCPUE <- aggregate(trps[c("KG", "trip_hours")], by = trps["month"], sum, drop = FALSE)
sum(trps$trip_hours)
sum(monthlyCPUE$trip_hours)
tmpf <- tempfile(fileext = ".csv")
test <- download.file(paste0("https://docs.google.com/spreadsheets/d/e/2PACX-1vSO-",
"ivIULOs5WOVwI1A0n-QPkgLiQ5bG8oTy4_NJJGQbqU15dVA5f0",
"oFXa6E7Op43dZz4j5T4-lWUTY/pub?gid=2135385965&single=",
"true&output=csv"), destfile = tmpf, quiet = TRUE)
if(test != 0) stop("Error 1")
x <- read.csv(tmpf, stringsAsFactors = FALSE)
x$date <- as.Date(x$date)
keeps <- x$flag %in% c(0L, 4L, 5L) ## weight and length discrepancies
x <- x[keeps, ]
# remove all rows whose parent trips contain NAs
x$gear <- match(x$gear, c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP"))
discards <- is.na(x$station) | is.na(x$hab) | is.na(x$gear)|
is.na(x$weight_g) | is.na(x$trip_effort) #logical
## must remove entire trip's data
discards <- x$Trip_ID[discards] #indices
discards <- x$Trip_ID %in% discards #logical
x <- x[!discards, ]
discards <- x$date >= lubridate::floor_date(Sys.Date(), unit = "day")
x <- x[!discards, ]
sites <- c("Adara", "Beloi", "Biqueli", "Vemasse", "Adarai",
"Uaroana", "Com", "Tutuala", "Ililai", "Beacou",
"Tolurika","Atekru","Berao","Iliana",
"Fatu'u","Doru","Raiketa","Maquer","Lore")
municipios <- c(10, 10, 10, 9, 1, 10, 2, 2, 2, 5, rep(10,8), 2)
habs <- c("Reef/Ahu ruin","FAD/Rompun","Deep/Tasi kle'an","Beach/Tasi ninin",
"Traditional FAD/Rompun bamboo","Mangrove/Aiparapa","Gleaning/Meti")
gears <- c("Gillnet/Redi","Handline/Hakail","Longline/Hakail naruk","Spear/Kilat","Cast net/Dai",
"Manual/Meti","Beach seine/Redi tasi ninin","Seine net/Lampara","Trap/Bubur")
## number of boats by municipio
totdata <- readRDS("data/totdata.rds")
td <- cbind(totdata[1], totdata[4], apply(totdata[5:7], 1, sum))
colnames(td) <- c("municipio", "ncanoes", "nmotors")
rownames(td) <- NULL
td
x <- x[x$date > as.Date("2018-04-01") & x$date < as.Date("2019-03-31"), ]
x$date <- as.character(x$date)
x$KG <- x$weight_g/1000
## hours is really manhours
x <- x[c("Trip_ID", "date", "species", "rel_effort", "trip_effort", "station", "hab", "gear", "btype", "KG")]
colnames(x)
## hours is really manhours
x <- x[c("trip_id", "date", "species", "rel_effort", "trip_effort", "station", "hab", "gear", "btype", "KG")]
## hours is really manhours
x <- x[c("trip_id", "date", "species", "rel_effort", "trip_effort", "station", "habitat", "gear", "boat_type", "KG")]
colnames(x) <- c("ID","Date", "species", "pob", "hours", "station", "hab", "gear", "btype", "KG")
x$Month <- lubridate::floor_date(as.Date(x$Date), unit = "month")
x$Month <- as.factor(x$Month)
## work out national catch for specified date range here
## fisrt aggregate trip hours
tmp <- aggregate(x[c("Date", "pob", "hours", "station", "hab", "gear", "btype","Month")],
by = list(x$ID), "[", 1)
x <- read.csv(tmpf, stringsAsFactors = FALSE)
x$date <- as.Date(x$date)
keeps <- x$flag %in% c(0L, 4L, 5L) ## weight and length discrepancies
x <- x[keeps, ]
# remove all rows whose parent trips contain NAs
x$gear <- match(x$gear, c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP"))
discards <- is.na(x$station) | is.na(x$hab) | is.na(x$gear)|
is.na(x$weight_g) | is.na(x$trip_effort) #logical
## must remove entire trip's data
discards <- x$Trip_ID[discards] #indices
discards <- x$Trip_ID %in% discards #logical
x <- x[!discards, ]
x <- read.csv(tmpf, stringsAsFactors = FALSE)
x$date <- as.Date(x$date)
keeps <- x$flag %in% c(0L, 4L, 5L) ## weight and length discrepancies
x <- x[keeps, ]
# remove all rows whose parent trips contain NAs
x$gear <- match(x$gear, c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP"))
discards <- is.na(x$station) | is.na(x$habitat) | is.na(x$gear)|
is.na(x$weight_g) | is.na(x$trip_effort) #logical
## must remove entire trip's data
discards <- x$trip_id[discards] #indices
discards <- x$trip_id %in% discards #logical
x <- x[!discards, ]
discards <- x$date >= lubridate::floor_date(Sys.Date(), unit = "day")
x <- x[!discards, ]
x <- x[x$date > as.Date("2018-04-01") & x$date < as.Date("2019-03-31"), ]
x$date <- as.character(x$date)
x$KG <- x$weight_g/1000
## hours is really manhours
x <- x[c("trip_id", "date", "species", "rel_effort", "trip_effort", "station", "habitat", "gear", "boat_type", "KG")]
colnames(x) <- c("ID","Date", "species", "pob", "hours", "station", "hab", "gear", "btype", "KG")
x$Month <- lubridate::floor_date(as.Date(x$Date), unit = "month")
x$Month <- as.factor(x$Month)
## work out national catch for specified date range here
## fisrt aggregate trip hours
tmp <- aggregate(x[c("Date", "pob", "hours", "station", "hab", "gear", "btype","Month")],
by = list(x$ID), "[", 1)
View(tmp)
sum(tmp$hours)
sum(trps$hours)
sum(trps$trip_hours)
colnames(trps)
runApp()
?downloadHandler
dateseq <- seq.Date(from = as.Date("2018-01-01"), to = as.Date("2019-04-01"), by = 1)
startdates <- as.character(unique(lubridate::floor_date(dateseq, unit = "month")))
startdates
?lubridate::cieling_date
?lubridate::ceiling_date
enddates <- as.character(unique(lubridate::ceiling_date(dateseq, unit = "month")))
enddates
enddates <- as.character(unique(lubridate::ceiling_date(dateseq, unit = "month")) - 1)
enddates
i <- 1
URL <- paste0("https://api.pelagicdata.com/api/VLxEDznakTkiJtu34Lq2/v1/points/", startdates[i], "/", enddates[i])
URL
dateseq <- seq.Date(from = as.Date("2018-02-01"), to = as.Date("2019-04-01"), by = 1)
startdates <- as.character(unique(lubridate::floor_date(dateseq, unit = "month")))
enddates <- as.character(unique(lubridate::ceiling_date(dateseq, unit = "month")) - 1)
URL <- paste0("https://api.pelagicdata.com/api/VLxEDznakTkiJtu34Lq2/v1/points/", startdates[i], "/", enddates[i])
URL
tmp <- httr::GET(URL, httr::authenticate("shaunpwilkinson@gmail.com", "VespaLX50"))
availdata <- readr::read_csv(httr::content(tmp, "raw"))
paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/", startdates[i], "_", enddates[i], ".rds")
saveRDS(availdata, file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/", startdates[i], "_", enddates[i], ".rds"))
for(i in seq_along(startdates)[-1]){
URL <- paste0("https://api.pelagicdata.com/api/VLxEDznakTkiJtu34Lq2/v1/points/", startdates[i], "/", enddates[i])
tmp <- httr::GET(URL, httr::authenticate("shaunpwilkinson@gmail.com", "VespaLX50"))
availdata <- readr::read_csv(httr::content(tmp, "raw"))
saveRDS(availdata, file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/", startdates[i], "_", enddates[i], ".rds"))
}
i
tmp2 <- readRDS(file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/",
startdates[i], "_", enddates[i], ".rds"))
i <- 14
ad2 <- readRDS(file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/",
startdates[i], "_", enddates[i], ".rds"))
head(ad2$Trip)
i <- 13
ad2 <- readRDS(file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/",
startdates[i], "_", enddates[i], ".rds"))
head(ad2$Trip)
?readr::read_csv
availdata <- readr::read_csv(httr::content(tmp, "raw"), col_types = "Tdddddddcc")
head(availdata$Trip)
saveRDS(availdata, file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/", startdates[i], "_", enddates[i], ".rds"))
i <- 7
ad2 <- readRDS(file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/",
startdates[i], "_", enddates[i], ".rds"))
head(ad2$Trip)
URL <- paste0("https://api.pelagicdata.com/api/VLxEDznakTkiJtu34Lq2/v1/points/", startdates[i], "/", enddates[i])
tmp <- httr::GET(URL, httr::authenticate("shaunpwilkinson@gmail.com", "VespaLX50"))
availdata <- readr::read_csv(httr::content(tmp, "raw"), col_types = "Tdddddddcc")
ad2 <- readr::read_csv(httr::content(tmp, "raw"))
ad2 <- readRDS(file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/",
startdates[i], "_", enddates[i], ".rds"))
head(ad2$Trip)
head(ad2$Time)
head(advaildata$Time)
head(availdata$Time)
i
head(availdata$Boat)
head(ad2$Boat)
availdata <- readr::read_csv(httr::content(tmp, "raw"), col_types = "Tdddddddcc")
saveRDS(availdata, file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/", startdates[i], "_", enddates[i], ".rds"))
i <- 13
URL <- paste0("https://api.pelagicdata.com/api/VLxEDznakTkiJtu34Lq2/v1/points/", startdates[i], "/", enddates[i])
tmp <- httr::GET(URL, httr::authenticate("shaunpwilkinson@gmail.com", "VespaLX50"))
availdata <- readr::read_csv(httr::content(tmp, "raw"), col_types = "Tdddddddcc")
ad2 <- readRDS(file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/",
startdates[i], "_", enddates[i], ".rds"))
head(ad2$Trip)
head(ad2$Time)
head(availdata$Time)
min(availdata$Time)
min(ad2$Time)
max(availdata$Time)
max(ad2$Time)
i
URL
paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/", startdates[i], "_", enddates[i], ".rds")
saveRDS(availdata, file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/", startdates[i], "_", enddates[i], ".rds"))
i <- 14
ad2 <- readRDS(file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/",
startdates[i], "_", enddates[i], ".rds"))
min(availdata$Time)
min(ad2$Time)
max(availdata$Time)
max(ad2$Time)
i <- 8
URL <- paste0("https://api.pelagicdata.com/api/VLxEDznakTkiJtu34Lq2/v1/points/", startdates[i], "/", enddates[i])
ad2 <- readRDS(file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/",
startdates[i], "_", enddates[i], ".rds"))
head(ad2$Trip)
i
URL <- paste0("https://api.pelagicdata.com/api/VLxEDznakTkiJtu34Lq2/v1/points/", startdates[i], "/", enddates[i])
tmp <- httr::GET(URL, httr::authenticate("shaunpwilkinson@gmail.com", "VespaLX50"))
availdata <- readr::read_csv(httr::content(tmp, "raw"), col_types = "Tdddddddcc")
ad2 <- readRDS(file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/",
startdates[i], "_", enddates[i], ".rds"))
head(ad2$Trip)
head(ad2$Time)
head(availdata$Time)
min(availdata$Time)
min(ad2$Time)
max(availdata$Time)
max(ad2$Time)
saveRDS(availdata, file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/", startdates[i], "_", enddates[i], ".rds"))
i <- 6
ad2 <- readRDS(file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/",
startdates[i], "_", enddates[i], ".rds"))
head(ad2$Trip)
object.size(ad2)
object.size(ad2)/1000000
dir("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/")
dateseq <- seq.Date(from = as.Date("2018-02-01"), to = as.Date("2019-05-01"), by = 1)
startdates <- as.character(unique(lubridate::floor_date(dateseq, unit = "month")))
enddates <- as.character(unique(lubridate::ceiling_date(dateseq, unit = "month")) - 1)
i <- 16
URL <- paste0("https://api.pelagicdata.com/api/VLxEDznakTkiJtu34Lq2/v1/points/", startdates[i], "/", enddates[i])
tmp <- httr::GET(URL, httr::authenticate("shaunpwilkinson@gmail.com", "VespaLX50"))
availdata <- readr::read_csv(httr::content(tmp, "raw"), col_types = "Tdddddddcc")
saveRDS(availdata, file = paste0("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/", startdates[i], "_", enddates[i], ".rds"))
availdata <- lapply(dir("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/"), readRDS)
dir("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/")
setwd("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/")
availdata <- lapply(dir(), readRDS)
availdata <- do.call("rbind", availdata)
colnames(availdata)
availdata <- availdata[!is.na(availdata$Trip), ]
availdata$Lat <- round(availdata$Lat, 3)
availdata$Lng <- round(availdata$Lng, 3)
availdata <- availdata[!duplicated(availdata[c("Trip", "Lat", "Lng")]), ] #12877
rm(ad2)
gc()
View(td)
rm(geo)
rm(tmp2)
colnames(availdata)
availdata <- availdata[, 1:5]
rm(geos)
availdata$latlng <- paste0(availdata$Lat, ",", availdata$Lng)
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user='wilko_sql1229113', password='R1fDe1QDB6',
dbname='wilko_peskaDAT', host='johnny.heliohost.org', port=3306)
RMySQL::dbWriteTable(peskaDAT, "geo", availdata, row.names=FALSE, overwrite = TRUE)
RMySQL::dbDisconnect(peskaDAT)
saveRDS(availdata, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/peskAAS/data/geo.rds")
runApp('~/Dropbox/East_Timor/Worldfish/peskAAS/peskAAS')
runApp('~/Dropbox/East_Timor/Worldfish/peskAAS/peskAAS')
runApp('~/Dropbox/East_Timor/Worldfish/peskAAS/peskAAS')
runApp('~/Dropbox/East_Timor/Worldfish/peskAAS/peskAAS')
runApp('~/Dropbox/East_Timor/Worldfish/peskAAS/peskAAS')
setwd("~/Dropbox/East_Timor/Worldfish/peskAAS/peskAAS/")
geos <- availdata
rm(a-])
rm(availdata)
\
head(geos$Time)
geos$Time <- as.Date(geos$Time)
head(geos$Time)
runApp()
tmp <- geos
head(geos$Time)
runApp()
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user='wilko_sql1229113', password='R1fDe1QDB6',
dbname='wilko_peskaDAT', host='johnny.heliohost.org', port=3306)
lndgs <- RMySQL::dbReadTable(peskaDAT, "landings")
trps <- RMySQL::dbReadTable(peskaDAT, "trips")
munis <- RMySQL::dbReadTable(peskaDAT, "municipalities")
stns <- RMySQL::dbReadTable(peskaDAT, "stations")
spcs <-  RMySQL::dbReadTable(peskaDAT, "species")
#geos <- RMySQL::dbReadTable(peskaDAT, "geo")
RMySQL::dbDisconnect(peskaDAT)
max(trps$trip_hours)
which.maxmax(trps$trip_hours)
which.max(trps$trip_hours)
trps[which.max(trps$trip_hours),]
geos <- readRDS("data/geo.rds")
geos$Time <- as.Date(geos$Time)
trps$gear <- match(trps$gear, c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP"))
trps$station <- stns$municipio[match(trps$station, stns$station)]
trps$trip_hours[trps$trip_hours == 0] <- 3
trps$trip_hours[trps$trip_hours > 72] <- 72
which.max(trps$trip_hours)
trps[which.max(trps$trip_hours),]
runApp()
q()
