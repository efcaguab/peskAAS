zipshp <- st_read("/home/shaun/Dropbox/Biomonitoring/Projects/EPA/Zip/Actual_points.shp")
plot(zipshp)
zipshp$magvar
st_crs(zipshp)
unclass(zipshp)
zipshp$geometry
uncalss(zipshp$geometry)
unclass(zipshp$geometry)
unlist(zipshp$geometry)
unlist(zipshp$geometry, recursive = F)
zipshp$geometry[[1]]
str(zipshp$geometry[[1]])
features <- unlist(zipshp$geometry)
features
longs <- [seq(1, length(features), by = 3)]
longs <- features[seq(1, length(features), by = 3)]
lats <- features[seq(2, length(features), by = 3)]
lats
longs
zipshp$cmt
samplecodes <- zipshp$name
samplecodes
out <- data.frame(samp_code = samplecodes, description = sitedescs, lat = lats, long = longs,
latlong = paste0(lats, ", ", longs), stringsAsFactors = F)
sitedescs <- zipshp$cmt
samplecodes <- zipshp$name
out <- data.frame(samp_code = samplecodes, description = sitedescs, lat = lats, long = longs,
latlong = paste0(lats, ", ", longs), stringsAsFactors = F)
out
write.csv(out, file = "/home/shaun/Dropbox/Biomonitoring/Projects/EPA/Zip/Actual_points.csv", row.names = FALSE)
install.packages("RMySQL")
paste0("https://gamma-analytics.pelagicdata.org:443/api/Z9d4LmrKzhxrmPDcuBxP/v1/points/", startdate, "/", enddate, "?deviceInfo=true")
q()
install.packages("cowplot")
shp_df <- readRDS("data/shape.rds")
kobo_trips <- readRDS("data/trips.rds")
kobo_landings <- readRDS("data/landings.rds")
pds_trips <- readRDS("data/PDS_trips.rds")
pds_points <- readRDS("data/PDS_points.rds")
max_date_numeric_kobo <- max(kobo_trips$date_numeric)
max_date_numeric_pds <- max(pds_trips$date_numeric)
dbcreds <- readRDS("data/dbcreds.rds")
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user=dbcreds[1], password=dbcreds[2],
dbname='wildrlab_peskaDB', host='johnny.heliohost.org', port=3306)
munis <- RMySQL::dbReadTable(peskaDAT, "municipalities")
stns <- RMySQL::dbReadTable(peskaDAT, "stations")
spcs <-  RMySQL::dbReadTable(peskaDAT, "species")
p1 <- paste0('SELECT * FROM trips WHERE date_numeric > ', max_date_numeric_kobo)
p2 <- paste0('SELECT * FROM landings WHERE trip_id IN ( SELECT trip_id FROM trips WHERE date_numeric > ',
max_date_numeric_kobo, ' )')
q1 <- paste0('SELECT * FROM PDS_trips WHERE date_numeric > ', max_date_numeric_pds)
q2 <- paste0('SELECT * FROM PDS_points WHERE PDS_trip IN ( SELECT PDS_trip FROM PDS_trips WHERE date_numeric > ',
max_date_numeric_pds, ' )')
kobotrps <- DBI::dbGetQuery(peskaDAT, p1)
kobolndgs <- DBI::dbGetQuery(peskaDAT, p2)
pdstrps <- DBI::dbGetQuery(peskaDAT, q1)
pdspts <- DBI::dbGetQuery(peskaDAT, q2)
RMySQL::dbDisconnect(peskaDAT)
trps <- rbind(kobo_trips, kobotrps)
lndgs <- rbind(kobo_landings, kobolndgs)
pds_trips <- rbind(pds_trips, pdstrps)
pds_points <- rbind(pds_points, pdspts)
trps <- trps[!duplicated(trps), ]
lndgs <- lndgs[!duplicated(lndgs), ]
pds_trips <- pds_trips[!duplicated(pds_trips), ]
pds_points <- pds_points[!duplicated(pds_points), ]
############ EXPORT UPDATED DATASETS TO /data REGULARLY TO SPEED THINGS UP #####################
saveRDS(trps, file = "data/trips.rds")
saveRDS(lndgs, file = "data/landings.rds")
saveRDS(pds_trips, file = "data/PDS_trips.rds")
saveRDS(pds_points, file = "data/PDS_points.rds")
## also create backups
tabs <- RMySQL::dbListTables(peskaDAT)
## also create backups
tabs <- RMySQL::dbListTables(peskaDAT)
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user=dbcreds[1], password=dbcreds[2],
dbname='wildrlab_peskaDB', host='johnny.heliohost.org', port=3306)
## also create backups
tabs <- RMySQL::dbListTables(peskaDAT)
tabs
sysdate <- Sys.Date()
dir.create(paste0("~/Documents/Worldfish/peskAAS/backups/", sysdate))
for(i in tabs){
tmp <- RMySQL::dbReadTable(peskaDAT, i)
saveRDS(tmp, file = paste0("~/Documents/Worldfish/peskAAS/backups/", sysdate, "/", i, ".rds"))
}
RMySQL::dbDisconnect(peskaDAT)
dbcreds
q()
q()
startdate <- lubridate::floor_date(Sys.Date() - lubridate::years(1), unit = "month")
if(is.na(startdate)) startdate <- lubridate::floor_date(Sys.Date() - lubridate::days(1) - lubridate::years(1), unit = "month")
shp_df <- readRDS("data/shape.rds")
kobo_trips <- readRDS("data/trips.rds")
kobo_landings <- readRDS("data/landings.rds")
pds_trips <- readRDS("data/PDS_trips.rds")
pds_points <- readRDS("data/PDS_points.rds")
sum(kobo_landings$weight_g)
sum(kobo_landings$weight_g[!is.na(kobo_landings$weight_g)])
max_date_numeric_kobo <- max(kobo_trips$date_numeric)
max_date_numeric_pds <- max(pds_trips$date_numeric)
dbcreds <- readRDS("data/dbcreds.rds")
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user=dbcreds[1], password=dbcreds[2],
dbname='wildrlab_peskaDB', host='johnny.heliohost.org', port=3306)
munis <- RMySQL::dbReadTable(peskaDAT, "municipalities")
stns <- RMySQL::dbReadTable(peskaDAT, "stations")
spcs <-  RMySQL::dbReadTable(peskaDAT, "species")
p1 <- paste0('SELECT * FROM trips WHERE date_numeric > ', max_date_numeric_kobo)
p2 <- paste0('SELECT * FROM landings WHERE trip_id IN ( SELECT trip_id FROM trips WHERE date_numeric > ',
max_date_numeric_kobo, ' )')
q1 <- paste0('SELECT * FROM PDS_trips WHERE date_numeric > ', max_date_numeric_pds)
q2 <- paste0('SELECT * FROM PDS_points WHERE PDS_trip IN ( SELECT PDS_trip FROM PDS_trips WHERE date_numeric > ',
max_date_numeric_pds, ' )')
kobotrps <- DBI::dbGetQuery(peskaDAT, p1)
kobolndgs <- DBI::dbGetQuery(peskaDAT, p2)
pdstrps <- DBI::dbGetQuery(peskaDAT, q1)
pdspts <- DBI::dbGetQuery(peskaDAT, q2)
trps <- rbind(kobo_trips, kobotrps)
lndgs <- rbind(kobo_landings, kobolndgs)
pds_trips <- rbind(pds_trips, pdstrps)
pds_points <- rbind(pds_points, pdspts)
trps <- trps[!duplicated(trps), ]
lndgs <- lndgs[!duplicated(lndgs), ]
pds_trips <- pds_trips[!duplicated(pds_trips), ]
pds_points <- pds_points[!duplicated(pds_points), ]
saveRDS(trps, file = "data/trips.rds")
saveRDS(lndgs, file = "data/landings.rds")
saveRDS(pds_trips, file = "data/PDS_trips.rds")
saveRDS(pds_points, file = "data/PDS_points.rds")
## also create backups
tabs <- RMySQL::dbListTables(peskaDAT)
sysdate <- Sys.Date()
dir.create(paste0("~/Dropbox/East_Timor/Worldfish/peskAAS/backups/", sysdate))
for(i in tabs){
tmp <- RMySQL::dbReadTable(peskaDAT, i)
saveRDS(tmp, file = paste0("~/Dropbox/East_Timor/Worldfish/peskAAS/backups/", sysdate, "/", i, ".rds"))
}
RMySQL::dbDisconnect(peskaDAT)
pds_trips$date <- as.Date(pds_trips$date)
# pds_trips$gear <- match(pds_trips$gear, c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP"))
pds_trips$habitat_code[pds_trips$habitat_code == 5L] <- 2L # lump trad fad in with normal fad
pds_trips$habitat_code[pds_trips$habitat_code == 6L] <- 5L # shift others back 1 to enable matching
pds_trips$habitat_code[pds_trips$habitat_code == 7L] <- 6L
discards <- is.na(pds_trips$boat_code) # logical
discard_trips <- pds_trips$PDS_trip[discards] #integer
pds_trips <- pds_trips[!discards, ]
pds_points <- pds_points[!(pds_points$PDS_trip %in% discard_trips), ]
sum(kobo_landings$weight_g[!is.na(kobo_landings$weight_g)])
sum(lndgs$weight_g[!is.na(lndgs$weight_g)])
## apply max latitude filter
discard_points <- grepl("^-8.11", pds_points$latlng)
discard_trips <- unique(pds_points$PDS_trip[discard_points])
pds_trips <- pds_trips[!(pds_trips$PDS_trip %in% discard_trips), ]
pds_points <- pds_points[!(pds_points$PDS_trip %in% discard_trips), ]
# convert stations to municipalities
trps$station_code <- stns$municipality_code[match(trps$station_code, stns$station_code)]
# filter by trip duration/effort
trps$trip_hours[trps$trip_hours == 0] <- 3
trps$trip_hours[trps$trip_hours > 72] <- 72
trps$trip_effort[trps$trip_effort == 0] <- 3
trps$trip_effort[trps$trip_effort > 144] <- 144
trps$habitat_code[trps$habitat_code == 5L] <- 2L # lump trad fad in with normal fad
trps$habitat_code[trps$habitat_code == 6L] <- 5L # shift others back 1 to enable matching
trps$habitat_code[trps$habitat_code == 7L] <- 6L
## gear match must be before discard step
discards <- lndgs$trip_id[lndgs$nfish > 10000] ## trip ids
discards <- c(discards, lndgs$trip_id[!(lndgs$flag_code %in% c(0L, 4L, 5L))])## trip ids
trpnas <- is.na(trps$station_code) | is.na(trps$habitat_code) | is.na(trps$gear_code) | is.na(trps$trip_effort) #logical
discards <- c(discards, trps$trip_id[trpnas])
lndnas <- is.na(lndgs$weight_g)
discards <- c(discards, lndgs$trip_id[lndnas])
trps$date <- as.Date(trps$date)
datnas <- trps$date < as.Date("2016-09-01") | trps$date >= lubridate::floor_date(Sys.Date(), unit = "day")
discards <- c(discards, trps$trip_id[datnas])
discards <- unique(discards)
trps <- trps[!(trps$trip_id %in% discards), ]
lndgs <- lndgs[!(lndgs$trip_id %in% discards), ]
lndgs$KG <- lndgs$weight_g/1000
sum(lndgs$KG[!is.na(lndgs$KG)])
sum(lndgs$weight_g[!is.na(lndgs$weight_g)])
trps <- rbind(kobo_trips, kobotrps)
lndgs <- rbind(kobo_landings, kobolndgs)
pds_trips <- rbind(pds_trips, pdstrps)
pds_points <- rbind(pds_points, pdspts)
trps <- trps[!duplicated(trps), ]
lndgs <- lndgs[!duplicated(lndgs), ]
pds_trips <- pds_trips[!duplicated(pds_trips), ]
pds_points <- pds_points[!duplicated(pds_points), ]
pds_trips$date <- as.Date(pds_trips$date)
# pds_trips$gear <- match(pds_trips$gear, c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP"))
pds_trips$habitat_code[pds_trips$habitat_code == 5L] <- 2L # lump trad fad in with normal fad
pds_trips$habitat_code[pds_trips$habitat_code == 6L] <- 5L # shift others back 1 to enable matching
pds_trips$habitat_code[pds_trips$habitat_code == 7L] <- 6L
discards <- is.na(pds_trips$boat_code) # logical
discard_trips <- pds_trips$PDS_trip[discards] #integer
pds_trips <- pds_trips[!discards, ]
pds_points <- pds_points[!(pds_points$PDS_trip %in% discard_trips), ]
discard_points <- grepl("^-8.11", pds_points$latlng)
discard_trips <- unique(pds_points$PDS_trip[discard_points])
pds_trips <- pds_trips[!(pds_trips$PDS_trip %in% discard_trips), ]
pds_points <- pds_points[!(pds_points$PDS_trip %in% discard_trips), ]
# convert stations to municipalities
trps$station_code <- stns$municipality_code[match(trps$station_code, stns$station_code)]
# filter by trip duration/effort
trps$trip_hours[trps$trip_hours == 0] <- 3
trps$trip_hours[trps$trip_hours > 72] <- 72
trps$trip_effort[trps$trip_effort == 0] <- 3
trps$trip_effort[trps$trip_effort > 144] <- 144
trps$habitat_code[trps$habitat_code == 5L] <- 2L # lump trad fad in with normal fad
trps$habitat_code[trps$habitat_code == 6L] <- 5L # shift others back 1 to enable matching
trps$habitat_code[trps$habitat_code == 7L] <- 6L
## gear match must be before discard step
discards <- lndgs$trip_id[lndgs$nfish > 10000] ## trip ids
sum(discards)
sum(is.na(lndgs$nfish))
which(is.na(lndgs$nfish))
View(lndgs)
which(is.na(lndgs$weight_g))
tail(which(is.na(lndgs$weight_g)))
tail(which(is.na(lndgs$trip_id)))
tail(which(is.na(lndgs$species_code)))
colnames(lndgs)
tail(which(is.na(lndgs$flag_code)))
## gear match must be before discard step
discards <- lndgs$trip_id[is.na(lndgs$species_code) | is.na(lndgs$length) |
is.na(lndgs$nfish) | is.na(lndgs$weight_g)|
is.na(lndgs$flag_code)]
sum(discards)
length(discards)
trps <- trps[!(trps$trip_id %in% discards), ]
lndgs <- lndgs[!(lndgs$trip_id %in% discards), ]
discards <- lndgs$trip_id[lndgs$nfish > 10000] ## trip ids
discards <- c(discards, lndgs$trip_id[!(lndgs$flag_code %in% c(0L, 4L, 5L))])## trip ids
trpnas <- is.na(trps$station_code) | is.na(trps$habitat_code) | is.na(trps$gear_code) | is.na(trps$trip_effort) #logical
discards <- c(discards, trps$trip_id[trpnas])
sum(lndgs$nfish > 10000)
lndgs$nfish[lndgs$nfish > 10000]
which(lndgs$nfish > 10000)
View(lndgs)
#discards <- lndgs$trip_id[lndgs$nfish > 10000] ## trip ids
discards <- lndgs$trip_id[!(lndgs$flag_code %in% c(0L, 4L, 5L))]## trip ids
sum(discards)
length(discards)
trpnas <- is.na(trps$station_code) | is.na(trps$habitat_code) | is.na(trps$gear_code) | is.na(trps$trip_effort) #logical
discards <- c(discards, trps$trip_id[trpnas])
trps$date <- as.Date(trps$date)
datnas <- trps$date < as.Date("2016-09-01") | trps$date >= lubridate::floor_date(Sys.Date(), unit = "day")
discards <- c(discards, trps$trip_id[datnas])
discards <- unique(discards)
trps <- trps[!(trps$trip_id %in% discards), ]
lndgs <- lndgs[!(lndgs$trip_id %in% discards), ]
lndgs$KG <- lndgs$weight_g/1000
## next 2 lines = 10x faster than aggregate
tmp <- split(lndgs$KG, f = factor(lndgs$trip_id, levels = trps$trip_id), drop = FALSE)
trps$KG <- vapply(tmp, sum, 0, USE.NAMES = FALSE)
cpues <- trps$KG/trps$trip_effort
hist(cpues)
hist(cpues, breaks = 0:35000)
hist(cpues, breaks = 0:350000)
hist(cpues[cpues < 10000], breaks = 0:10000)
hist(cpues[cpues < 1000], breaks = 0:1000)
hist(cpues[cpues < 100], breaks = 0:100)
discards <- trps$trip_id[cpues > 100]
trps <- trps[!(trps$trip_id %in% discards), ]
lndgs <- lndgs[!(lndgs$trip_id %in% discards), ]
shiny::runApp()
sum(lndgs$weight_g)
runApp()
q()
q()
shiny::runApp()
startdate <- lubridate::floor_date(Sys.Date() - lubridate::years(1), unit = "month")
if(is.na(startdate)) startdate <- lubridate::floor_date(Sys.Date() - lubridate::days(1) - lubridate::years(1), unit = "month")
shp_df <- readRDS("data/shape.rds")
kobo_trips <- readRDS("data/trips.rds")
kobo_landings <- readRDS("data/landings.rds")
pds_trips <- readRDS("data/PDS_trips.rds")
pds_points <- readRDS("data/PDS_points.rds")
max_date_numeric_kobo <- max(kobo_trips$date_numeric)
max_date_numeric_pds <- max(pds_trips$date_numeric)
dbcreds <- readRDS("data/dbcreds.rds")
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user=dbcreds[1], password=dbcreds[2],
dbname='wildrlab_peskaDB', host='johnny.heliohost.org', port=3306)
munis <- RMySQL::dbReadTable(peskaDAT, "municipalities")
stns <- RMySQL::dbReadTable(peskaDAT, "stations")
spcs <-  RMySQL::dbReadTable(peskaDAT, "species")
p1 <- paste0('SELECT * FROM trips WHERE date_numeric > ', max_date_numeric_kobo)
p2 <- paste0('SELECT * FROM landings WHERE trip_id IN ( SELECT trip_id FROM trips WHERE date_numeric > ',
max_date_numeric_kobo, ' )')
q1 <- paste0('SELECT * FROM PDS_trips WHERE date_numeric > ', max_date_numeric_pds)
q2 <- paste0('SELECT * FROM PDS_points WHERE PDS_trip IN ( SELECT PDS_trip FROM PDS_trips WHERE date_numeric > ',
max_date_numeric_pds, ' )')
kobotrps <- DBI::dbGetQuery(peskaDAT, p1)
kobolndgs <- DBI::dbGetQuery(peskaDAT, p2)
pdstrps <- DBI::dbGetQuery(peskaDAT, q1)
pdspts <- DBI::dbGetQuery(peskaDAT, q2)
trps <- rbind(kobo_trips, kobotrps)
lndgs <- rbind(kobo_landings, kobolndgs)
pds_trips <- rbind(pds_trips, pdstrps)
pds_points <- rbind(pds_points, pdspts)
trps <- trps[!duplicated(trps), ]
lndgs <- lndgs[!duplicated(lndgs), ]
pds_trips <- pds_trips[!duplicated(pds_trips), ]
pds_points <- pds_points[!duplicated(pds_points), ]
RMySQL::dbDisconnect(peskaDAT)
pds_trips$date <- as.Date(pds_trips$date)
# pds_trips$gear <- match(pds_trips$gear, c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP"))
pds_trips$habitat_code[pds_trips$habitat_code == 5L] <- 2L # lump trad fad in with normal fad
pds_trips$habitat_code[pds_trips$habitat_code == 6L] <- 5L # shift others back 1 to enable matching
pds_trips$habitat_code[pds_trips$habitat_code == 7L] <- 6L
discards <- is.na(pds_trips$boat_code) # logical
discard_trips <- pds_trips$PDS_trip[discards] #integer
pds_trips <- pds_trips[!discards, ]
pds_points <- pds_points[!(pds_points$PDS_trip %in% discard_trips), ]
## apply max latitude filter
discard_points <- grepl("^-8.11", pds_points$latlng)
discard_trips <- unique(pds_points$PDS_trip[discard_points])
pds_trips <- pds_trips[!(pds_trips$PDS_trip %in% discard_trips), ]
pds_points <- pds_points[!(pds_points$PDS_trip %in% discard_trips), ]
# convert stations to municipalities
trps$station_code <- stns$municipality_code[match(trps$station_code, stns$station_code)]
# filter by trip duration/effort
trps$trip_hours[trps$trip_hours == 0] <- 3
trps$trip_hours[trps$trip_hours > 72] <- 72
trps$trip_effort[trps$trip_effort == 0] <- 3
trps$trip_effort[trps$trip_effort > 144] <- 144
trps$habitat_code[trps$habitat_code == 5L] <- 2L # lump trad fad in with normal fad
trps$habitat_code[trps$habitat_code == 6L] <- 5L # shift others back 1 to enable matching
trps$habitat_code[trps$habitat_code == 7L] <- 6L
## gear match must be before discard step
discards <- lndgs$trip_id[is.na(lndgs$species_code) | is.na(lndgs$length) |
is.na(lndgs$nfish) | is.na(lndgs$weight_g)|
is.na(lndgs$flag_code)]
trps <- trps[!(trps$trip_id %in% discards), ]
lndgs <- lndgs[!(lndgs$trip_id %in% discards), ]
#discards <- lndgs$trip_id[lndgs$nfish > 10000] ## trip ids
discards <- lndgs$trip_id[!(lndgs$flag_code %in% c(0L, 4L, 5L))]## trip ids
trpnas <- is.na(trps$station_code) | is.na(trps$habitat_code) | is.na(trps$gear_code) | is.na(trps$trip_effort) #logical
discards <- c(discards, trps$trip_id[trpnas])
trps$date <- as.Date(trps$date)
datnas <- trps$date < as.Date("2016-09-01") | trps$date >= lubridate::floor_date(Sys.Date(), unit = "day")
discards <- c(discards, trps$trip_id[datnas])
discards <- unique(discards)
trps <- trps[!(trps$trip_id %in% discards), ]
lndgs <- lndgs[!(lndgs$trip_id %in% discards), ]
lndgs$KG <- lndgs$weight_g/1000
## next 2 lines = 10x faster than aggregate
tmp <- split(lndgs$KG, f = factor(lndgs$trip_id, levels = trps$trip_id), drop = FALSE)
trps$KG <- vapply(tmp, sum, 0, USE.NAMES = FALSE)
## check for crazy CPUE values
cpues <- trps$KG/trps$trip_effort
discards <- trps$trip_id[cpues > 100]
trps <- trps[!(trps$trip_id %in% discards), ]
lndgs <- lndgs[!(lndgs$trip_id %in% discards), ]
## date landings tab (day not month)
tmp <- structure(trps$date, names = trps$trip_id)
lndgs$date <- tmp[lndgs$trip_id]
sites <- c("Viqueque","Lautem","Manatuto","Liquica","Bobonaro","Covalima",
"Manufahi","Ainaro","Baucau","Dili","Oe-Cusse", "Atauro")
habitats <- c("Reef/Ahu ruin","FAD/Rumpon","Deep/Tasi kle'an","Beach/Tasi ninin",
"Mangrove/Aiparapa","Gleaning/Meti")
gears <- c("Gillnet/Redi","Handline/Hakail","Longline/Hakail naruk","Spear/Kilat","Cast net/Dai",
"Manual/Meti","Beach seine/Redi tasi ninin", "Seine net/Lampara","Trap/Bubur")
boat_types <- c("Canoe", "Motor")
## temp fix for Joctan 2020-02-05
trps$IMEI[trps$IMEI == 9376082 & trps$date_numeric > 17691L] <- "6738430"
as.Date("2020-07-31")
trps <- trps[trps$date < as.Date("2020-07-31"), ]
pds_trips <- pds_trips[pds_trips$date < as.Date("2020-07-31"), ]
colnames(trps)
lndgs <- lndgs[(lndgs$trip_id %in% trps$trip_id), ]
sum(lndgs$KG)
colnames(pds_trips)
?smooth.spline
unique(trps$boat_code)
sum(trps$boat_code == 3)
sum(trps$boat_code == 2)
sum(trps$boat_code == 1)
391/22000
q()
q()
library(insect)
source("https://www.dropbox.com/s/20hj7un2vyaukt9/post_processing.R?dl=1")
setwd("/home/shaun/Dropbox/Biomonitoring/Nanopore/NP0112/")
tsx <- insect::readFASTA("/home/shaun/Dropbox/Biomonitoring/Nanopore/NP0108/rdp_16s_v16.fa.gz") #13212
tsx <- tsx[nchar(gsub("[^:]", "", names(tsx))) == 6L] #12317
head(names(tsx))
hist(sapply(tsx, length), breaks = 0:2500)
tsxt <- insect::virtualPCR(tsx, U337F, U907R, cores=4, trimprimers = FALSE) #12236
hist(sapply(tsxt, length), breaks = 0:1500) # around 600bp
U337F <- "GACTCCTACGGGAGGCWGCAG"
U907R <- "CCGTCAATTCCTTTRAGTTT"
U8F <- "AGAGTTTGATCCTGGCTCAG"
U27F <- "AGAGTTTGATCMTGGCTCAG"
U336R <- "ACTGCTGCSYCCCGTAGGAGTCT"
U337F <- "GACTCCTACGGGAGGCWGCAG"
U337F <- "GACTCCTACGGGAGGCWGCAG"
U341F <- "CCTACGGGNGGCWGCAG"
U515FB <- "GTGYCAGCMGCCGCGGTAA"
U518R <- "GTATTACCGCGGCTGCTGG"
U533F <- "GTGCCAGCMGCCGCGGTAA"
U785F <- "GGATTAGATACCCTGGTA"
U805R <- "GACTACHVGGGTATCTAATCC"
U806RB <- "GGACTACNVGGGTWTCTAAT"
U907R <- "CCGTCAATTCCTTTRAGTTT"
U928F <- "TAAAACTYAAAKGAATTGACGGG"
U1100F <- "YAACGAGCGCAACCC"
U1100R <- "GGGTTGCGCTCGTTG"
U1492R <- 'CGGTTACCTTGTTACGACTT'
tsxt <- insect::virtualPCR(tsx, U337F, U907R, cores=4, trimprimers = FALSE) #12236
hist(sapply(tsxt, length), breaks = 0:1500) # around 600bp
writeFASTA(tsxt, file = "/home/shaun/Dropbox/Biomonitoring/Nanopore/NP0112/rdp_16s_v16_trimmed.fa.gz", compress = TRUE)
bc3 <- lapply(paste0("fastq_pass/barcode03/", dir("fastq_pass/barcode03/")), readFASTQ)
bc4 <- lapply(paste0("fastq_pass/barcode04/", dir("fastq_pass/barcode04/")), readFASTQ)
bc3 <- structure(unlist(bc3, recursive = F), class = "DNAbin")
bc4 <- structure(unlist(bc4, recursive = F), class = "DNAbin")
bc8 <- lapply(paste0("fastq_pass/barcode08/", dir("fastq_pass/barcode08/")), readFASTQ)
bc9 <- lapply(paste0("fastq_pass/barcode09/", dir("fastq_pass/barcode09/")), readFASTQ)
bc8 <- structure(unlist(bc8, recursive = F), class = "DNAbin")
bc9 <- structure(unlist(bc9, recursive = F), class = "DNAbin")
bc3 <- c(bc3, bc8)
bc4 <- c(bc4, bc9)
bc3
dna2char(bc3)
tmp <- sinfun(bc4, tsx, threshold = 0.001)
tmp$sequence <- dna2char(bc4)
View(tmp)
tsx <- readFASTA("/home/shaun/Documents/Biomonitoring/Bioinformatics/fungi_metabar/utax_reference_dataset_01.12.2017.fasta")
tmp <- sinfun(bc4, tsx, threshold = 0.001)
tmp$sequence <- dna2char(bc4)
View(tmp)
tmp3 <- sinfun(bc4, tsx, threshold = 0.001)
tmp3$sequence <- dna2char(bc4)
tmp3 <- sinfun(bc3, tsx, threshold = 0.001)
tmp3$sequence <- dna2char(bc3)
tmp4 <- sinfun(bc4, tsx, threshold = 0.001)
tmp4$sequence <- dna2char(bc4)
View(tmp3)
View(tmp4)
?dada2::learnErrors
startdate <- lubridate::floor_date(Sys.Date() - lubridate::years(1), unit = "month")
if(is.na(startdate)) startdate <- lubridate::floor_date(Sys.Date() - lubridate::days(1) - lubridate::years(1), unit = "month")
head(kobo_trips$date)
shp_df <- readRDS("data/shape.rds")
kobo_trips <- readRDS("data/trips.rds")
kobo_landings <- readRDS("data/landings.rds")
pds_trips <- readRDS("data/PDS_trips.rds")
pds_points <- readRDS("data/PDS_points.rds")
setwd("~/Dropbox/East_Timor/Worldfish/peskAAS/peaskAAS")
getwd()
setwd("~/Dropbox/East_Timor/Worldfish/peskAAS/peskAAS")
kobo_trips <- readRDS("data/trips.rds")
kobo_landings <- readRDS("data/landings.rds")
pds_trips <- readRDS("data/PDS_trips.rds")
pds_points <- readRDS("data/PDS_points.rds")
head(kobo_trips$date)
str(kobo_trips$date)
###########################
kobo_trips <- kobo_trips[as.Date(kobo_trips$date) < as.Date("2020-07-31"), ]
kobo_landings <- kobo_landings[(kobo_landings$trip_id %in% kobo_trips$trip_id), ]
head(pds_trips$date)
str(pds_trips$date)
pds_trips <- pds_trips[as.Date(pds_trips$date) < as.Date("2020-07-31"), ]
linked_trips <- pds_trips[!is.na(pds_trips$trip_id), ]
sum(linked_trips)
nrow(linked_trips)
set.seed(999)
trainingtrips <- sample(seq_len(nrow(linked_trips)), size = round(nrow(linked_trips)*0.8))
trainingdata <- linked_trips[trainingtrips, ]
querydata <- linked_trips[!(seq_len(nrow(linked_trips)) %in% trainingtrips), ]
nnobj2 <- RANN::nn2(trainingdata[, 13:32], querydata[, 13:32], k = 1)
toofar <- nnobj2$nn.dists[, 1] > 0.2
nohab <- !querydata$habitat_code %in% trainingdata$habitat_code
nogear <- !querydata$gear_code %in% trainingdata$gear_code
keeps <- !toofar &  !nohab & !nogear ## remove 3 records
sum(keeps)
length(keeps)
querydata <- querydata[keeps, ]
nnobj2$nn.dists <- nnobj2$nn.dists[keeps, , drop = FALSE]
nnobj2$nn.idx <- nnobj2$nn.idx[keeps,  ,drop = FALSE]
sum(querydata$gear_code== trainingdata$gear_code[nnobj2$nn.idx[, 1]])/nrow(querydata)
sum(querydata$habitat_code== trainingdata$habitat_code[nnobj2$nn.idx[, 1]])/nrow(querydata)
gear_success <- numeric(100L)
habitat_success <- numeric(100L)
gear_success <- numeric(100L)
habitat_success <- numeric(100L)
set.seed(999)
for(i in 1:100){
trainingtrips <- sample(seq_len(nrow(linked_trips)), size = round(nrow(linked_trips)*0.8))
trainingdata <- linked_trips[trainingtrips, ]
querydata <- linked_trips[!(seq_len(nrow(linked_trips)) %in% trainingtrips), ]
nnobj2 <- RANN::nn2(trainingdata[, 13:32], querydata[, 13:32], k = 1)
toofar <- nnobj2$nn.dists[, 1] > 0.2
nohab <- !querydata$habitat_code %in% trainingdata$habitat_code
nogear <- !querydata$gear_code %in% trainingdata$gear_code
keeps <- !toofar &  !nohab & !nogear ## remove 3 records
sum(keeps)
length(keeps)
querydata <- querydata[keeps, ]
nnobj2$nn.dists <- nnobj2$nn.dists[keeps, , drop = FALSE]
nnobj2$nn.idx <- nnobj2$nn.idx[keeps,  ,drop = FALSE]
gear_success[i] <- sum(querydata$gear_code== trainingdata$gear_code[nnobj2$nn.idx[, 1]])/nrow(querydata) #0.815
habitat_success[i] <- sum(querydata$habitat_code== trainingdata$habitat_code[nnobj2$nn.idx[, 1]])/nrow(querydata) #0.896
}
hist(gear_success)
hist(habitat_success)
mean(gear_success)
sd(gear_success)
mean(gear_success)
mean(habitat_success)
sd(habitat_success)
q()
