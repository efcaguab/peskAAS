trips0 <- DBI::dbGetQuery(peskaDAT, 'SELECT * FROM trips')
spp0 <- DBI::dbGetQuery(peskaDAT, 'SELECT * FROM landings')
message("Reading Kobo tables")
cty <- c("text", "text", "date", "text", "date", rep("text", 71))
trips <- readxl::read_excel(tmpz, sheet = 1, col_types = cty)
colnames(trips) <- gsub(".+/", "", colnames(trips))
colnames(trips) <- gsub("^_", "", colnames(trips)) #only version still has undersc
trips$index <- as.integer(trips$index)
# trips$id <- as.integer(trips$id)
spp <- readxl::read_excel(tmpz, sheet = 2, col_types = "text")
colnames(spp) <- gsub(".+/", "", colnames(spp))
colnames(spp) <- gsub("^_", "", colnames(spp))
spp$parent_index <- as.integer(spp$parent_index)
trips <- trips[!trips$id %in% trips0$trip_id, ]
spp <- spp[spp$parent_index %in% trips$index, ]
View(spp)
spp <- spp[order(spp$parent_index), ]
dups <- duplicated(spp[, -match("index", colnames(spp))])
if(any(dups)){
message("Duplicates found for trip(s) ", unique(spp[["parent_index"]][dups]))
spp <- spp[!dups, ]
}
message("Filtering tables & tidying columns")
species0 <- DBI::dbGetQuery(peskaDAT, 'SELECT * FROM species')
pesksheet <- googlesheets::gs_key("13VGyuzLVaCU9vF8wNxwsAuz-SbIN3S6yRVvuJQUTK6I", visibility = "private")
pesksheet <- googlesheets::gs_key("13VGyuzLVaCU9vF8wNxwsAuz-SbIN3S6yRVvuJQUTK6I", visibility = "private")
#peskador <- googlesheets::gs_read(pesksheet, ws = 1, col_types = "ccDiccciiicicdiiiididciiicddiidid")
sp_pars <- googlesheets::gs_read(pesksheet, ws = 2, col_types = "iiiccccccccddddicdcccc")
spp <- spp[spp$Choose_Species %in% sp_pars$spp_code, ]
trips[trips$index %in% spp$parent_index, ]
trips <- trips[trips$index %in% spp$parent_index, ]
trips$Site_name
## condense fisher name cols
trips$Site_name[!trips$Site_name %in% paste(1:30)] <- NA
trips$Site_name <- as.integer(trips$Site_name)
trips$Site_name
colnames(trips0)
if(mode(trips$Site_name) == "character") warning("Site variable failed conversion to integer")
trips$habitat_
trips$habitat_[!trips$habitat_ %in% paste(1:7)] <- NA # 7 is gleaning
trips$habitat_ <- as.integer(trips$habitat_)
if(mode(trips$habitat_) == "character") warning("Habitat variable failed conversion to integer")
trips$gear_type
trips$gear_type[is.na(trips$gear_type)] <- "0"
trips$gear_type[trips$gear_type == "1"] <- "GN"
trips$gear_type[trips$gear_type == "2"] <- "HL"
trips$gear_type[trips$gear_type == "3"] <- "LL"
trips$gear_type[trips$gear_type == "4"] <- "SG"
trips$gear_type[trips$gear_type == "5"] <- "CN"
trips$gear_type[trips$gear_type == "6"] <- "MC"
trips$gear_type[trips$gear_type == "7"] <- "BS"
trips$gear_type[trips$gear_type == "8"] <- "SN"
trips$gear_type[trips$gear_type == "9"] <- "TP"
trips$gear_type
trips$gear_type[!trips$gear_type %in% c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP")] <- NA_character_
trips$gear_type
trips$mesh_size
trips$mesh_size[!trips$mesh_size %in% c("1", "1.25", "1.5", "2", "2.5", "3")] <- NA_character_
suppressWarnings(trips$mesh_size <- as.numeric(trips$mesh_size)) #warning ok
trips$mesh_size
trips$mane_men_
trips$mane_men_ <- as.integer(trips$mane_men_)
trips$feto_women_
trips$feto_women_ <- as.integer(trips$feto_women_)
trips$labarik_children_ <- as.integer(trips$labarik_children_)
trips$labarik_children_
trips$Happiness[!trips$Happiness %in% paste(1:5)] <- NA_character_
trips$Happiness <- as.integer(trips$Happiness)
trips$transport_type
trips$transport_type[!trips$transport_type %in% paste(1:3)] <- NA_character_
trips$transport_type <- as.integer(trips$transport_type)
trips$TOTAL_ORAS_VIAGEM_PESKA
## coerce dates into correct format
trips$TOTAL_ORAS_VIAGEM_PESKA <- as.numeric(trips$TOTAL_ORAS_VIAGEM_PESKA)
trips$TOTAL_ORAS_VIAGEM_PESKA[trips$TOTAL_ORAS_VIAGEM_PESKA > 72] <- NA
spp$Choose_Species
spp$Choose_Species[spp$Choose_Species == "zero_catch"] <- "0"
suppressWarnings(spp$Choose_Species <- as.integer(spp$Choose_Species)) # warning ok
spp$Choose_Species[is.na(spp$Choose_Species)] <- 999 # unidentified species code
countcols <- grep("number_of_individuals", colnames(spp))
countcols
stopifnot(length(countcols) == 11)
colnames(spp)[countcols[1]] <- "number_of_individuals_1"
natrips <- integer(0)
for(i in 1:11){
invalids <- grepl("[\\.,][123456789]+", spp[[countcols[i]]])
natrips <- c(natrips, trips$id[match(spp$parent_index[invalids], trips$index)])
if(any(invalids)) message("Repairing invalid counts: ",  spp[[countcols[i]]][invalids])
spp[[countcols[i]]][invalids] <- gsub("[\\.,]", "", spp[[countcols[i]]][invalids])
spp[[countcols[i]]] <- as.integer(spp[[countcols[i]]])
}
invalids
spp[[countcols]]
View(spp)
spp$presu
##
DBI::dbDisconnect(peskaDAT)
unlink(paste0(sub("/$", "", path), "/peskaDAT.sqlite"))
## first order by trip_id and then by rec_id
## change rec IDs
pesksheet <- googlesheets::gs_key("13VGyuzLVaCU9vF8wNxwsAuz-SbIN3S6yRVvuJQUTK6I", visibility = "private")
peskador <- googlesheets::gs_read(pesksheet, ws = 1, col_types = "iiDicicicdiiiididciicdiidid")
peskador <- googlesheets::gs_read(pesksheet, ws = 1, col_types = "ccDiccciiicicdiiiididciiicddiidid")
trips <- peskador[-c(1, 10, 11, 12, 20, 21, 26, 27, 31, 32)]
trips <- aggregate(trips, by = trips["trip_id"], head, 1)
trips <- trips[-1]
spps <- peskador[c(1, 2, 10, 11, 12, 20, 21, 26, 27, 31)]
colnames(spps)
head(spps$species)
old_sp_pars <- googlesheets::gs_read(pesksheet, ws = 2, col_types = "iiiccccccccddddicdcccc")
new_sp_pars <- googlesheets::gs_read(pesksheet, ws = 3, col_types = "iccccddiiidccccc")
which(is.na((old_sp_pars$new_spp_code[match(spps$species, old_sp_pars$spp_code)])))
head(old_sp_pars$new_spp_code[match(spps$species, old_sp_pars$spp_code)])
View(old_sp_pars)
sum(peskador$station == 20)
old_sp_pars <- googlesheets::gs_read(pesksheet, ws = 2, col_types = "iiiccccccccddddicdcccc")
new_sp_pars <- googlesheets::gs_read(pesksheet, ws = 3, col_types = "iccccddiiidccccc")
which(is.na((old_sp_pars$new_spp_code[match(spps$species, old_sp_pars$spp_code)])))
head(old_sp_pars$new_spp_code[match(spps$species, old_sp_pars$spp_code)])
spps$spp_code <- old_sp_pars$new_spp_code[match(spps$species, old_sp_pars$spp_code)]
spps <- spps[!is.na(spps$spp_code), ]
trips <- trips[trips$trip_id %in% spps$trip_id,]
gears <- googlesheets::gs_read(pesksheet, ws = 4, col_types = "cicccc")
habitats <- googlesheets::gs_read(pesksheet, ws = 5, col_types = "icc")
flags <- googlesheets::gs_read(pesksheet, ws = 6, col_types = "ic")
transport <- googlesheets::gs_read(pesksheet, ws = 7, col_types = "ic")
ranks <- googlesheets::gs_read(pesksheet, ws = 8, col_types = "ic")
municipalities <- googlesheets::gs_read(pesksheet, ws = 9, col_types = "iciiiiii")
stations <- googlesheets::gs_read(pesksheet, ws = 10, col_types = "icicc")
stations_old <- googlesheets::gs_read(pesksheet, ws = 11, col_types = "icii")
trips$station <- stations_old$new_code[match(trips$station, stations_old$Code)]
sum(is.na(trips$station))
vac <- googlesheets::gs_read(pesksheet, ws = 12, col_types = "cd")
sites <- googlesheets::gs_read(pesksheet, ws = 13, col_types = "ic")
peskaDAT <- DBI::dbConnect(RSQLite::SQLite(), "~/Documents/Worldfish/peskAAS/peskaDAT.sqlite")
dbWriteTable(peskaDAT, "VACs", vac)
dbWriteTable(peskaDAT, "flags", flags)
dbWriteTable(peskaDAT, "rankings", ranks)
dbWriteTable(peskaDAT, "sites", sites)
dbWriteTable(peskaDAT, "stations", stations)
dbWriteTable(peskaDAT, "municipalities", municipalities)
dbWriteTable(peskaDAT, "habitat_types", habitats)
dbWriteTable(peskaDAT, "gear_types", gears)
dbWriteTable(peskaDAT, "boat_types", transport)
dbWriteTable(peskaDAT, "species", new_sp_pars)
dbWriteTable(peskaDAT, "landings", spps)
dbWriteTable(peskaDAT, "trips", trips)
dbListTables(peskaDAT)
dbGetQuery(peskaDAT, 'SELECT * FROM species LIMIT 5')
dbDisconnect(peskaDAT)
id <-  135272 # new landings data
URL <- paste0("https://kc.humanitarianresponse.info/api/v1/data/", id, ".xlsx")
kobocreds <- scan("KoBo-auth.txt", what = "", sep = "\n")
kobocreds <- kobocreds[!grepl("^#", kobocreds)]
kobocreds <- kobocreds[grep(":", kobocreds)[1]]
stopifnot(length(kobocreds) == 1L)
kobocreds <- gsub(" ", "", kobocreds)
kobocreds <- strsplit(kobocreds, split = ":")[[1]][1:2]
stopifnot(length(kobocreds) == 2L)
z <- httr::GET(URL, httr::authenticate(kobocreds[1], kobocreds[2]))
httr::stop_for_status(z)
tmpz <- tempfile(fileext = ".xlsx")
filetag <- file(tmpz, open = "wb")
writeBin(httr::content(z, type = "raw"), filetag)
close(filetag)
message("Reading Kobo tables")
cty <- c("text", "text", "date", "text", "date", rep("text", 71))
trips <- readxl::read_excel(tmpz, sheet = 1, col_types = cty)
colnames(trips) <- gsub(".+/", "", colnames(trips))
colnames(trips) <- gsub("^_", "", colnames(trips)) #only version still has undersc
trips$index <- as.integer(trips$index)
# trips$id <- as.integer(trips$id)
spp <- readxl::read_excel(tmpz, sheet = 2, col_types = "text")
colnames(spp) <- gsub(".+/", "", colnames(spp))
colnames(spp) <- gsub("^_", "", colnames(spp))
spp$parent_index <- as.integer(spp$parent_index)
trips <- trips[!trips$id %in% trips0$trip_id, ]
spp <- spp[spp$parent_index %in% trips$index, ]
spp <- spp[order(spp$parent_index), ]
spp <- spp[spp$Choose_Species %in% sp_pars$spp_code, ]
trips <- trips[trips$index %in% spp$parent_index, ]
dups <- duplicated(spp[, -match("index", colnames(spp))])
if(any(dups)){
message("Duplicates found for trip(s) ", unique(spp[["parent_index"]][dups]))
spp <- spp[!dups, ]
}
## condense fisher name cols
trips$Site_name[!trips$Site_name %in% paste(1:30)] <- NA
trips$Site_name <- as.integer(trips$Site_name)
if(mode(trips$Site_name) == "character") warning("Site variable failed conversion to integer")
trips$habitat_[!trips$habitat_ %in% paste(1:7)] <- NA # 7 is gleaning
trips$habitat_ <- as.integer(trips$habitat_)
if(mode(trips$habitat_) == "character") warning("Habitat variable failed conversion to integer")
trips$gear_type[is.na(trips$gear_type)] <- "0"
trips$gear_type[trips$gear_type == "1"] <- "GN"
trips$gear_type[trips$gear_type == "2"] <- "HL"
trips$gear_type[trips$gear_type == "3"] <- "LL"
trips$gear_type[trips$gear_type == "4"] <- "SG"
trips$gear_type[trips$gear_type == "5"] <- "CN"
trips$gear_type[trips$gear_type == "6"] <- "MC"
trips$gear_type[trips$gear_type == "7"] <- "BS"
trips$gear_type[trips$gear_type == "8"] <- "SN"
trips$gear_type[trips$gear_type == "9"] <- "TP"
trips$gear_type[!trips$gear_type %in% c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP")] <- NA_character_
trips$mesh_size[!trips$mesh_size %in% c("1", "1.25", "1.5", "2", "2.5", "3")] <- NA_character_
suppressWarnings(trips$mesh_size <- as.numeric(trips$mesh_size)) #warning ok
trips$mane_men_ <- as.integer(trips$mane_men_)
trips$feto_women_ <- as.integer(trips$feto_women_)
trips$labarik_children_ <- as.integer(trips$labarik_children_)
trips$Happiness[!trips$Happiness %in% paste(1:5)] <- NA_character_
trips$Happiness <- as.integer(trips$Happiness)
trips$transport_type[!trips$transport_type %in% paste(1:3)] <- NA_character_
trips$transport_type <- as.integer(trips$transport_type)
## coerce dates into correct format
trips$TOTAL_ORAS_VIAGEM_PESKA <- as.numeric(trips$TOTAL_ORAS_VIAGEM_PESKA)
trips$TOTAL_ORAS_VIAGEM_PESKA[trips$TOTAL_ORAS_VIAGEM_PESKA > 72] <- NA
spp$Choose_Species[spp$Choose_Species == "zero_catch"] <- "0"
suppressWarnings(spp$Choose_Species <- as.integer(spp$Choose_Species)) # warning ok
spp$Choose_Species[is.na(spp$Choose_Species)] <- 999 # unidentified species code
countcols <- grep("number_of_individuals", colnames(spp))
stopifnot(length(countcols) == 11)
colnames(spp)[countcols[1]] <- "number_of_individuals_1"
natrips <- integer(0)
for(i in 1:11){
invalids <- grepl("[\\.,][123456789]+", spp[[countcols[i]]])
natrips <- c(natrips, trips$id[match(spp$parent_index[invalids], trips$index)])
if(any(invalids)) message("Repairing invalid counts: ",  spp[[countcols[i]]][invalids])
spp[[countcols[i]]][invalids] <- gsub("[\\.,]", "", spp[[countcols[i]]][invalids])
spp[[countcols[i]]] <- as.integer(spp[[countcols[i]]])
}
spp$presu
spp$presu <- as.numeric(spp$presu)
spp$numeru_ikan <- as.integer(spp$numeru_ikan)
spp$per_Kg_hira <- as.numeric(spp$per_Kg_hira)
spp$number_of_individuals_0 <- NA_integer_
spp$number_of_individuals_0[spp$Choose_Species == 0L] <- 0L
colnames(spp)[colnames(spp) == "IKAN_NARUK_LIU_60_cm_SUKAT_NO_"] <- "length"
colnames(spp)[colnames(spp) == "NUMERU_IKAN_LIU_60_cm"] <- "nfish"
spp$length
colnames(spp)
spp$length <- as.numeric(spp$length)
spp$nfish
spp$number_of_individuals_0
View(spp)
spp$nfish <- as.numeric(spp$nfish)
for(i in 1:nrow(spp)){
if(!is.na(spp$length[i])){
if(spp$length[i] <= 60){
spp$length[i] <- spp$nfish[i] <- NA
}else if(is.na(spp$nfish[i])){
spp$nfish[i] <- 1L
}else if(spp$nfish[i] == spp$length[i]){
spp$nfish[i] <- 1L
}
}else if(!is.na(spp$nfish[i])){
spp$length[i] <- 62.5 ## round down to 60 cm?
}
if(spp$Choose_Species[i] == 0) spp[i, countcols] <- NA
}
numnas <- apply(spp[c("presu", "numeru_ikan")], 1, function(v) sum(is.na(v)))
numnas
spp[c("presu", "numeru_ikan")][numnas == 1, ] <- NA
r1l <- vector(mode = "list", length = 13)
len <- 0
for(i in 1:12){
tmp <- spp[c("Choose_Species", "other_name", paste0("number_of_individuals_", i - 1),
"foodsale", "presu", "numeru_ikan", "parent_index")]
colnames(tmp)[1:4] <- c("species", "note", "nfish", "food_sale")
tmp$length <- len
len <- len + if(i == 1) 7.5 else 5
r1l[[i]] <- tmp[!is.na(tmp$nfish), ]
}
tmp <- spp[c("Choose_Species", "other_name", "nfish", "foodsale", "presu",
"numeru_ikan", "parent_index", "length")]
colnames(tmp)[1:4] <- c("species", "note", "nfish", "food_sale")
r1l[[13]] <- tmp[!is.na(tmp$nfish), ]
r1 <- as.data.frame(do.call("rbind", r1l))
r1$species == 205
######## r1$species[r1$species == 205] <- 91 # manual change to bullet tuna
parinds <- match(r1$parent_index, trips$index)
parinds
r1$trip_id
trips$id[parinds]
r1$trip_id <- trips$id[parinds]
r1$date <- trips$today[parinds]
r1$station <- trips$Site_name[parinds]
trips$peskador_naran_sa_fisher_name_[parinds]
View(trips)
cty <- c("text", "text", "date", "text", "date", rep("text", 71))
trips <- readxl::read_excel(tmpz, sheet = 1, col_types = cty)
colnames(trips) <- gsub(".+/", "", colnames(trips))
colnames(trips) <- gsub("^_", "", colnames(trips)) #only version still has undersc
trips$index <- as.integer(trips$index)
# trips$id <- as.integer(trips$id)
spp <- readxl::read_excel(tmpz, sheet = 2, col_types = "text")
colnames(spp) <- gsub(".+/", "", colnames(spp))
colnames(spp) <- gsub("^_", "", colnames(spp))
spp$parent_index <- as.integer(spp$parent_index)
trips <- trips[!trips$id %in% trips0$trip_id, ]
spp <- spp[spp$parent_index %in% trips$index, ]
spp <- spp[order(spp$parent_index), ]
spp <- spp[spp$Choose_Species %in% sp_pars$spp_code, ]
trips <- trips[trips$index %in% spp$parent_index, ]
dups <- duplicated(spp[, -match("index", colnames(spp))])
if(any(dups)){
message("Duplicates found for trip(s) ", unique(spp[["parent_index"]][dups]))
spp <- spp[!dups, ]
}
message("Filtering tables & tidying columns")
## condense fisher name cols
## condense fisher name cols
narandata <- as.matrix(trips[, 11:48])
narandata[narandata == "other"] <- NA
trips[[11]] <- apply(narandata, 1, function(r) r[match(FALSE, is.na(r))])
trips <- trips[, -(12:48)]
View(trips)
trips$Site_name[trips$Site_name == "LOR"] <- "20"
trips$Site_name[trips$Site_name == "COM"] <- "7"
trips$Site_name[!trips$Site_name %in% paste(1:30)] <- NA
trips$Site_name <- as.integer(trips$Site_name)
if(mode(trips$Site_name) == "character") warning("Site variable failed conversion to integer")
trips$habitat_[!trips$habitat_ %in% paste(1:7)] <- NA # 7 is gleaning
trips$habitat_ <- as.integer(trips$habitat_)
if(mode(trips$habitat_) == "character") warning("Habitat variable failed conversion to integer")
trips$gear_type[is.na(trips$gear_type)] <- "0"
trips$gear_type[trips$gear_type == "1"] <- "GN"
trips$gear_type[trips$gear_type == "2"] <- "HL"
trips$gear_type[trips$gear_type == "3"] <- "LL"
trips$gear_type[trips$gear_type == "4"] <- "SG"
trips$gear_type[trips$gear_type == "5"] <- "CN"
trips$gear_type[trips$gear_type == "6"] <- "MC"
trips$gear_type[trips$gear_type == "7"] <- "BS"
trips$gear_type[trips$gear_type == "8"] <- "SN"
trips$gear_type[trips$gear_type == "9"] <- "TP"
trips$gear_type[!trips$gear_type %in% c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP")] <- NA_character_
trips$mesh_size[!trips$mesh_size %in% c("1", "1.25", "1.5", "2", "2.5", "3")] <- NA_character_
suppressWarnings(trips$mesh_size <- as.numeric(trips$mesh_size)) #warning ok
trips$mane_men_ <- as.integer(trips$mane_men_)
trips$feto_women_ <- as.integer(trips$feto_women_)
trips$labarik_children_ <- as.integer(trips$labarik_children_)
trips$Happiness[!trips$Happiness %in% paste(1:5)] <- NA_character_
trips$Happiness <- as.integer(trips$Happiness)
trips$transport_type[!trips$transport_type %in% paste(1:3)] <- NA_character_
trips$transport_type <- as.integer(trips$transport_type)
## coerce dates into correct format
trips$TOTAL_ORAS_VIAGEM_PESKA <- as.numeric(trips$TOTAL_ORAS_VIAGEM_PESKA)
trips$TOTAL_ORAS_VIAGEM_PESKA[trips$TOTAL_ORAS_VIAGEM_PESKA > 72] <- NA
spp$Choose_Species[spp$Choose_Species == "zero_catch"] <- "0"
suppressWarnings(spp$Choose_Species <- as.integer(spp$Choose_Species)) # warning ok
spp$Choose_Species[is.na(spp$Choose_Species)] <- 999 # unidentified species code
countcols <- grep("number_of_individuals", colnames(spp))
stopifnot(length(countcols) == 11)
colnames(spp)[countcols[1]] <- "number_of_individuals_1"
natrips <- integer(0)
for(i in 1:11){
invalids <- grepl("[\\.,][123456789]+", spp[[countcols[i]]])
natrips <- c(natrips, trips$id[match(spp$parent_index[invalids], trips$index)])
if(any(invalids)) message("Repairing invalid counts: ",  spp[[countcols[i]]][invalids])
spp[[countcols[i]]][invalids] <- gsub("[\\.,]", "", spp[[countcols[i]]][invalids])
spp[[countcols[i]]] <- as.integer(spp[[countcols[i]]])
}
spp$presu <- as.numeric(spp$presu)
spp$numeru_ikan <- as.integer(spp$numeru_ikan)
spp$per_Kg_hira <- as.numeric(spp$per_Kg_hira)
spp$number_of_individuals_0 <- NA_integer_
spp$number_of_individuals_0[spp$Choose_Species == 0L] <- 0L
colnames(spp)[colnames(spp) == "IKAN_NARUK_LIU_60_cm_SUKAT_NO_"] <- "length"
colnames(spp)[colnames(spp) == "NUMERU_IKAN_LIU_60_cm"] <- "nfish"
spp$length <- as.numeric(spp$length)
spp$nfish <- as.numeric(spp$nfish)
for(i in 1:nrow(spp)){
if(!is.na(spp$length[i])){
if(spp$length[i] <= 60){
spp$length[i] <- spp$nfish[i] <- NA
}else if(is.na(spp$nfish[i])){
spp$nfish[i] <- 1L
}else if(spp$nfish[i] == spp$length[i]){
spp$nfish[i] <- 1L
}
}else if(!is.na(spp$nfish[i])){
spp$length[i] <- 62.5 ## round down to 60 cm?
}
if(spp$Choose_Species[i] == 0) spp[i, countcols] <- NA
}
numnas <- apply(spp[c("presu", "numeru_ikan")], 1, function(v) sum(is.na(v)))
spp[c("presu", "numeru_ikan")][numnas == 1, ] <- NA
r1l <- vector(mode = "list", length = 13)
len <- 0
for(i in 1:12){
tmp <- spp[c("Choose_Species", "other_name", paste0("number_of_individuals_", i - 1),
"foodsale", "presu", "numeru_ikan", "parent_index")]
colnames(tmp)[1:4] <- c("species", "note", "nfish", "food_sale")
tmp$length <- len
len <- len + if(i == 1) 7.5 else 5
r1l[[i]] <- tmp[!is.na(tmp$nfish), ]
}
tmp <- spp[c("Choose_Species", "other_name", "nfish", "foodsale", "presu",
"numeru_ikan", "parent_index", "length")]
colnames(tmp)[1:4] <- c("species", "note", "nfish", "food_sale")
r1l[[13]] <- tmp[!is.na(tmp$nfish), ]
r1 <- as.data.frame(do.call("rbind", r1l))
######## r1$species[r1$species == 205] <- 91 # manual change to bullet tuna
parinds <- match(r1$parent_index, trips$index)
r1$trip_id <- trips$id[parinds]
r1$date <- trips$today[parinds]
r1$station <- trips$Site_name[parinds]
trips$peskador_naran_sa_fisher_name_[parinds]
r1$fisher <- trips$peskador_naran_sa_fisher_name_[parinds]
r1$flag <- 0L
r1$gear <- trips$gear_type[parinds]
r1$mesh <- trips$mesh_size[parinds]
r1$men <- trips$mane_men_[parinds]
r1$women <- trips$feto_women_[parinds]
r1$children <- trips$labarik_children_[parinds]
r1$rel_effort <- r1$men + r1$women + r1$children
# r1$rel_effort <- trips$mane_men_[parinds] + trips$feto_women_[parinds] +
#   trips$labarik_children_[parinds]
r1$rel_effort[r1$rel_effort < 1] <- 3
r1$trip_hours <- trips$TOTAL_ORAS_VIAGEM_PESKA[parinds]
r1$trip_hours[is.na(r1$trip_hours)] <- 3
r1$trip_hours[r1$trip_hours < 1] <- 1
r1$trip_hours[r1$trip_hours > 48] <- 48
r1$trip_hours <- round(r1$trip_hours, 1)
r1$site <- trips$fishing_location[parinds]
r1$rank <- trips$Happiness[parinds]
r1$all_boats <- trips$No_boats[parinds]
r1$habitat <- trips$habitat_[parinds]
r1$boat_type <- trips$transport_type[parinds]
sp_rows <- match(r1$species, sp_pars$Code)
View(sp_pars2)
View(sp_pars)
sp_rows <- match(r1$species, sp_pars$spp_code)
sp_rows[is.na(sp_rows)]
match(999L, sp_pars$spp_code)
sp_rows[is.na(sp_rows)] <- match(999L, sp_pars$spp_code)
tooshort <- r1$length > 0 & r1$length < sp_pars$minlength[sp_rows] * 0.75
tooshort
tooshort[is.na(tooshort)] <- FALSE
r1$flag[tooshort] <- 1L
toolong <- r1$length > sp_pars$maxlength[sp_rows] * 1.25
toolong[is.na(toolong)] <- FALSE
toolong
r1$flag[toolong] <- 2L
get_weight <- function(a, b, l) a * l^b
unitwgt <- mapply(get_weight, sp_pars$a[sp_rows], sp_pars$b[sp_rows],  r1$length)
tooheavy <- unitwgt > sp_pars$maxweight[sp_rows] * 1.5
tooheavy[is.na(tooheavy)] <- FALSE
tooheavy
r1$flag[tooheavy & !toolong] <- 3L
r1$weight_g <- round(r1$nfish * unitwgt)
r1$weight_g[r1$species == 0] <- 0
r1$price_per_kg <- round((r1$nfish/r1$weight_g) * (r1$presu/r1$numeru_ikan) * 1000, 1)
r1$price_per_kg[is.nan(r1$price_per_kg)] <- NA
toocheap <- r1$price_per_kg < 0.05
toocheap[is.na(toocheap)] <- FALSE
toocheap
r1$flag[toocheap] <- 4L
toodear <- r1$price_per_kg > 6
toodear[is.na(toodear)] <- FALSE
r1$flag[toodear] <- 5L
r1$flag[r1$trip_id %in% natrips] <- 7L
invalidcombo <- r1$habitat %in% c(2, 5) & r1$gear == "BS"
r1$flag[invalidcombo] <- 8L
r1$trip_effort <- round(r1$trip_hours * r1$rel_effort, 1)
r1 <- r1[order(r1$date, r1$trip_id), ]
r1$dummy_row <- as.integer(!duplicated(r1$trip_id)) ## do this after sort
r1 <- r1[!is.na(r1$trip_id), ]
r1 <- r1[order(r1$trip_id), ]
tmp <- split(r1$trip_id, f = factor(r1$trip_id, levels = unique(r1$trip_id)))
addnos <- function(v) paste0(v, formatC(seq_along(v), width = 2, format = "d", flag = "0"))
tmp <- lapply(tmp, addnos)
r1$rec_id  <- unlist(tmp, use.names = FALSE)
r1$site[nchar(r1$site) > 50] <- NA
r1$boat_id <- NA_character_
r1$owner <- NA_character_
r1$has_PDS <- NA_integer_
r1$IMEI <- NA_integer_
r1$all_gleaners <- NA_integer_
r1$catch_value <- NA_real_
outcols <- colnames(peskador)
r1[outcols]
out <- r1[outcols]
out <- out[order(out$date, out$rec_id), ]
message("Appending ", nrow(out), " new records to peskaDAT google sheet")
q()
lubridate::floor_date(Sys.Date(), unit = "month")
str(lubridate::floor_date(Sys.Date(), unit = "month"))
lubridate::floor_date(Sys.Date(), unit = "month") %m+% months(6)
library(lubridate)
lubridate::floor_date(Sys.Date(), unit = "month") %m+% months(6)
lubridate::ceiling_date(Sys.Date(), unit = "month") %m-% months(1)
lubridate::ceiling_date(Sys.Date(), unit = "month")
Sys.Date()
lubridate::ceiling_date(Sys.Date() %m-% months(1), unit = "month")
lubridate::floor_date(Sys.Date() %m-% months(1), unit = "month")
lubridate::floor_date(Sys.Date(), unit = "month")
lubridate::floor_date(Sys.Date(), unit = "month") - days(1)
lubridate::floor_date(Sys.Date() %m-% months(12), unit = "month")
lubridate::floor_date(Sys.Date() %m-% years(1), unit = "month")
shiny::runApp()
runApp()
runApp()
runApp()
lubridate::floor_date(Sys.Date() - months(12), unit = "month")
?months
?days
lubridate::floor_date(Sys.Date() - lubridate::years(1), unit = "month")
lubridate::floor_date(Sys.Date(), unit = "month") - lubridate::days(1)
runApp()
runApp()
q()
q()
