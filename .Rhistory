saveRDS(PDS_points, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/PDS_points.rds")
saveRDS(trps, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/trips.rds")
saveRDS(lndgs, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/landings.rds")
saveRDS(flags, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/flags.rds")
saveRDS(vac, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/VACs.rds")
saveRDS(ranks, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/rankings.rds")
saveRDS(sites, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/sites.rds")
saveRDS(stations, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/stations.rds")
saveRDS(municipalities, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/municipalities.rds")
saveRDS(habitats, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/habitat_types.rds")
saveRDS(gears, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/gear_types.rds")
saveRDS(transport, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/boat_types.rds")
saveRDS(sp_pars, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/species.rds")
saveRDS(boats, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/boats.rds")
saveRDS(trps, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/trips.rds")
saveRDS(lndgs, file = "~/Dropbox/East_Timor/Worldfish/peskAAS/dumps/20190704/landings.rds")
q()
q()
shiny::runApp()
q()
## trim the fat - orig 49.8 mil records
monthlys <- readRDS("/home/shaun/Documents/Worldfish/peskAAS/PDS/points/2018-02-01_2019-08-30.rds")
monthlys <- monthlys[!is.na(monthlys$Trip), ] #42.5m
monthlys <- monthlys[, 1:5]
monthlys$Time <- as.Date(monthlys$Time)
monthlys$Lat <- round(monthlys$Lat, 3)
monthlys$Lng <- round(monthlys$Lng, 3)
monthlys <- monthlys[!duplicated(monthlys[c("Trip", "Lat", "Lng")]), ] #12877
monthlys$latlng <- paste0(monthlys$Lat, ",", monthlys$Lng)
head(monthlys$Lat )
monthlys$Lat <- monthlys$Lat * 1000
monthlys$Lng <- monthlys$Lng * 1000
monthlys$Lat <- 2 * round(monthlys$Lat/2)
monthlys$Lng <- 2 * round(monthlys$Lng/2)
monthlys$Lat <- monthlys$Lat/1000
monthlys$Lng <- monthlys$Lng/1000
head(monthlys$Lat )
monthlys <- monthlys[!duplicated(monthlys[c("Trip", "Lat", "Lng")]), ]
monthlys$latlng <- paste0(monthlys$Lat, ",", monthlys$Lng)
colnames(monthlys)
colnames(monthlys) <- c("date", "PDS_boat_no", "PDS_trip", "lat", "lng", "latlng")
monthlys$date <- as.character(monthlys$date)
## split into PDS trips and points tables
PDS_trips <- monthlys[c("PDS_trip", "date", "PDS_boat_no")]
PDS_trips <- PDS_trips[!duplicated(PDS_trips$PDS_trip),] #30572
PDS_points <- monthlys[c("PDS_trip", "latlng")]
PDS_trips$date_numeric <- as.numeric(as.Date(PDS_trips$date))
indices <- match(PDS_trips$PDS_boat_no, boats$PDS_boat_no)
pesksheet <- googlesheets::gs_key("13VGyuzLVaCU9vF8wNxwsAuz-SbIN3S6yRVvuJQUTK6I", visibility = "private")
pesksheet <- googlesheets::gs_key("13VGyuzLVaCU9vF8wNxwsAuz-SbIN3S6yRVvuJQUTK6I", visibility = "private")
pesksheet <- googlesheets::gs_key("13VGyuzLVaCU9vF8wNxwsAuz-SbIN3S6yRVvuJQUTK6I", visibility = "private")
# pesksheet <- googlesheets::gs_key("13VGyuzLVaCU9vF8wNxwsAuz-SbIN3S6yRVvuJQUTK6I", visibility = "private")
# boats <- googlesheets::gs_read(pesksheet, ws = 1, col_types = "cicccidccdcccccccccc")
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user='wilko_sql1229113', password='R1fDe1QDB6',
dbname='wilko_peskaDAT', host='johnny.heliohost.org', port=3306)
boats  <- RMySQL::dbReadTable(peskaDAT, "boats")
RMySQL::dbDisconnect(peskaDAT)
indices <- match(PDS_trips$PDS_boat_no, boats$PDS_boat_no)
sum(is.na(indices))
View(PDS_trips)
discards <- !(PDS_trips$PDS_boat_no %in% boats$PDS_boat_no)
sum(discards)
colnames(PDS_trips)
discard_trips <- PDS_trips$PDS_trip[discards]
PDS_trips <- PDS_trips[!discards, ]
discard_points <- PDS_points$PDS_trip %in% discard_trips
sum(discard_points)
PDS_points <- PDS_points[!discard_points, ] #973536
indices <- match(PDS_trips$PDS_boat_no, boats$PDS_boat_no) #1403/25342 NAs
PDS_trips$IMEI <- boats$IMEI[indices]
PDS_trips$boat_type <- boats$boat_type[indices]#  1 = canoe, 2 = motor
PDS_trips$station <- stations$station[match(boats$municipio_name[indices], stations$municipio_name)]
# pesksheet <- googlesheets::gs_key("13VGyuzLVaCU9vF8wNxwsAuz-SbIN3S6yRVvuJQUTK6I", visibility = "private")
# boats <- googlesheets::gs_read(pesksheet, ws = 1, col_types = "cicccidccdcccccccccc")
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user='wilko_sql1229113', password='R1fDe1QDB6',
dbname='wilko_peskaDAT', host='johnny.heliohost.org', port=3306)
stations  <- RMySQL::dbReadTable(peskaDAT, "stations")
RMySQL::dbDisconnect(peskaDAT)
stations
boats$municipio_name
PDS_trips$station <- stations$station[match(boats$municipio_name[indices], stations$municipio_name)]
discards <- is.na(PDS_trips$IMEI) | is.na(PDS_trips$boat_type) | is.na(PDS_trips$station)
sum(discards)
discard_trips <- PDS_trips$PDS_trip[discards]
PDS_trips <- PDS_trips[!discards, ]
discard_points <- PDS_points$PDS_trip %in% discard_trips
PDS_points <- PDS_points[!discard_points, ] #1082091
tmp <- boats$boat_type[match(PDS_trips$IMEI, boats$IMEI)]
sum(is.na(tmp))
PDSTIMEI7 <- sub(".+(.{7})$", "\\1", PDS_trips$IMEI)
PDSTIMEI7 <- paste0(PDSTIMEI7, "-",PDS_trips$date)
indices <- match(PDSTIMEI7, paste0(trps$IMEI, "-", trps$date))
head(indices)
sum(duplicated(indices))
trps  <- RMySQL::dbReadTable(peskaDAT, "trips")
# pesksheet <- googlesheets::gs_key("13VGyuzLVaCU9vF8wNxwsAuz-SbIN3S6yRVvuJQUTK6I", visibility = "private")
# boats <- googlesheets::gs_read(pesksheet, ws = 1, col_types = "cicccidccdcccccccccc")
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user='wilko_sql1229113', password='R1fDe1QDB6',
dbname='wilko_peskaDAT', host='johnny.heliohost.org', port=3306)
trps  <- RMySQL::dbReadTable(peskaDAT, "trips")
View(trps)
RMySQL::dbDisconnect(peskaDAT)
path_to_koboauth <- "~/Documents/Worldfish/peskAAS/KoBo-auth.txt"
# path_to_token <- "/home/shaunpwilkinson_gmail_com/Desktop/Worldfish/token.rds"
# path_to_backup_dir <- "East_Timor/Worldfish/peskAAS/backups/"  ## dropbox path
kobo_id <-  344563 # new landings data
if(!("DBI" %in% list.files(.libPaths()))) install.packages("DBI", repos = "https://cloud.r-project.org/")
if(!("RMySQL" %in% list.files(.libPaths()))) install.packages("RMySQL", repos = "https://cloud.r-project.org/")
if(!("httr" %in% list.files(.libPaths()))) install.packages("httr", repos = "https://cloud.r-project.org/")
if(!("readxl" %in% list.files(.libPaths()))) install.packages("readxl", repos = "https://cloud.r-project.org/")
############# DON'T CHANGE CODE BELOW ###############
print(Sys.Date())
message("Retrieving landings data from KoBo")
# x <- httr::GET("https://kc.humanitarianresponse.info/api/v1/data.csv", httr::authenticate("atilley", "4*tykPG*"))
# availdata <- readr::read_csv(httr::content(x, "raw"))
kobocreds <- scan(path_to_koboauth, what = "", sep = "\n")
kobocreds <- kobocreds[!grepl("^#", kobocreds)]
kobocreds <- kobocreds[grep(":", kobocreds)[1]]
stopifnot(length(kobocreds) == 1L)
kobocreds <- gsub(" ", "", kobocreds)
kobocreds <- strsplit(kobocreds, split = ":")[[1]][1:2]
stopifnot(length(kobocreds) == 2L)
URL <- paste0("https://kc.humanitarianresponse.info/api/v1/data/", kobo_id, ".xlsx")
z <- httr::GET(URL, httr::authenticate(kobocreds[1], kobocreds[2]))
httr::stop_for_status(z)
tmpz <- tempfile(fileext = ".xlsx")
filetag <- file(tmpz, open = "wb")
writeBin(httr::content(z, type = "raw"), filetag)
close(filetag)
message("Reading Kobo tables")
cty <- c("text", "text", "date", "text", "date", rep("text", 39))
trips <- readxl::read_excel(tmpz, sheet = 1, col_types = cty)
colnames(trips) <- gsub(".+/", "", colnames(trips))
colnames(trips) <- gsub("^_+", "", colnames(trips))
trips$index <- as.integer(trips$index)
spp <- readxl::read_excel(tmpz, sheet = 2, col_types = "text")
colnames(spp) <- gsub(".+/", "", colnames(spp))
colnames(spp) <- gsub("^_+", "", colnames(spp))
spp$parent_index <- as.integer(spp$parent_index)
spp <- spp[order(spp$parent_index), ] ## should be ordered anyway but just in case
spp$trip_id <- trips$id[spp$parent_index] # make sure no trips have been removed prior to this
tmp <- split(spp$trip_id, f = factor(spp$trip_id, levels = unique(spp$trip_id)))
addnos <- function(v) paste0(v, formatC(seq_along(v), width = 2, format = "d", flag = "0"))
tmp <- lapply(tmp, addnos)
spp$rec_id <- unlist(tmp, use.names = FALSE)
## remove non-boat-based trips
trips$has_boat[is.na(trips$has_boat)] <- "FALSE"
trips$has_boat[trips$has_boat != "TRUE"] <- "FALSE" ## may not need this next time
trips$has_boat <- as.logical(trips$has_boat)
trips <- trips[trips$has_boat,]
###trips <- trips[!trips$id %in% peskador$trip_id, ] ############# replace rows in peskaDAT.sqlite??
spp <- spp[spp$parent_index %in% trips$index, ]
dups <- duplicated(spp[, -match("index", colnames(spp))])
if(any(dups)){
message("Duplicates found for trip(s) ", unique(spp[["parent_index"]][dups]))
spp <- spp[!dups, ]
}
message("Filtering tables & tidying columns")
trips$rel_effort <- NA_integer_ ### remember to calculate = men + women + children
trips$trip_effort <- NA_real_ ### remember to calculate = rel_effort * trip_hours
trips$flag <- 0L
trips$mesh_size[is.na(trips$mesh_size)] <- trips$mesh_size_other[is.na(trips$mesh_size)]
trips <- trips[c("id", "date", "landing_site_name", "habitat_boat", "boat_type", "has_PDS", "IMEI", "boat_reg_no", "boat_owner_name",
"gear_type", "mesh_size",  "duration", "no_men_fishers", "no_women_fishers", "no_child_fishers",
"rel_effort", "trip_effort", "total_catch_value",  "happiness_rating", "no_boats", "how_many_gleaners_today",
"flag", "notes")]
colnames(trips) <- c("trip_id", "date", "station", "habitat", "boat_type",  "has_PDS", "IMEI",  "boat_id", "owner", "gear",
"mesh", "trip_hours", "men", "women", "children", "rel_effort", "trip_effort", "catch_value", "rank",
"all_boats", "all_gleaners", "flag", "note")
trips$station[!trips$station %in% paste(1:30)] <- NA
trips$station <- as.integer(trips$station)
if(mode(trips$station) == "character") warning("Site variable failed conversion to integer")
trips$habitat[!trips$habitat %in% paste(1:7)] <- NA
trips$habitat <- as.integer(trips$habitat)
if(mode(trips$habitat) == "character") warning("Habitat variable failed conversion to integer")
## convert other cols to integers/numeric
trips$gear[!trips$gear %in% c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP")] <- NA_character_
#trips$mesh[!trips$mesh %in% c("1", "1.25", "1.5", "2", "2.5", "3")] <- NA_character_
suppressWarnings(trips$mesh <- as.numeric(trips$mesh)) #warning ok
trips$men <- as.integer(trips$men)
trips$women <- as.integer(trips$women)
trips$children <- as.integer(trips$children)
trips$rank[!trips$rank %in% paste(1:5)] <- NA_character_
trips$rank <- as.integer(trips$rank)
trips$boat_type[!trips$boat_type %in% paste(1:2)] <- NA_character_ ## note no shoreys included here
trips$boat_type <- as.integer(trips$boat_type)
trips$rel_effort <- trips$men + trips$women + trips$children
trips$flag[trips$rel_effort < 1] <- 10L
trips$trip_hours <- as.numeric(trips$trip_hours)
trips$trip_hours[is.na(trips$trip_hours)] <- 0
trips$flag[trips$trip_hours < 1] <- 9L
trips$flag[trips$trip_hours > 72] <- 9L
trips$trip_hours <- round(trips$trip_hours, 1)
trips$trip_effort <- trips$rel_effort * trips$trip_hours
trips$IMEI[is.na(trips$IMEI)] <- "0"
ncimei <- nchar(trips$IMEI)
trips$IMEI[ncimei > 7] <- sub(".+(.{7})$", "\\1", trips$IMEI[ncimei > 7])
ncimei <- nchar(trips$IMEI)
nzta <- 8 - ncimei # would be 7 - ncemi but add 1 for R indexing style
zta <- c("", "0", "00", "000", "0000", "00000", "000000", "0000000")[nzta]
trips$IMEI <- paste0(zta, trips$IMEI)
trips$date_numeric <- as.numeric(as.Date(trips$date))
trips <- trips[order(trips$date_numeric, trips$trip_id), ]
trips$has_PDS <- as.integer(as.logical(trips$has_PDS))
trips$date <- as.character(trips$date)
trips$catch_value <- as.integer(trips$catch_value)
trips$all_boats <- as.integer(trips$all_boats)
trips$all_gleaners <- as.integer(trips$all_gleaners)
suppressWarnings(spp$species <- as.integer(spp$species)) # warning ok
spp$species[is.na(spp$species)] <- 999 # unidentified species code
fcc <- grep("no_individuals_5_10", colnames(spp))
lcc <- grep("no_individuals_55_60", colnames(spp))
tmp <- spp[, seq(fcc, lcc)]
midpoints <- c(7.5, 12.5, 17.5, 22.5, 27.5, 32.5, 37.5, 42.5, 47.5, 52.5, 57.5)
spp$length <- midpoints[apply(tmp, 1, function(r) match(FALSE, is.na(r)))]
spp$nfish <- as.integer(apply(tmp, 1, function(r) r[match(FALSE, is.na(r))]))
bigfish <- is.na(spp$length)
spp$length[bigfish] <- as.numeric(spp$fish_length_over60[bigfish]) # will be NA for zero catch
spp$nfish[bigfish] <- as.integer(spp$no_individuals_over60[bigfish]) # will be NA for zero catch
#spp$nfish[bigfish] <- 1L
spp$nfish[is.na(spp$length) | spp$species == 0] <- 0L
spp$flag <- 0L
spp$flag[is.na(spp$nfish)] <- 7L # shouldn't be any NA in nfish
spp$weight_g <- NA_real_
spp <- spp[c("rec_id", "trip_id", "species", "length", "nfish", "weight_g", "food_or_sale", "flag", "notes")]
colnames(spp) <- c("rec_id", "trip_id", "species",  "length", "nfish", "weight_g", "food_sale", "flag", "note")
spp$species <- as.integer(spp$species)
## connect to db
#peskaDAT <- DBI::dbConnect(RSQLite::SQLite(), path_to_db)
########## TODO change to cnf file
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user='wilko_sql1229113', password='R1fDe1QDB6',
dbname='wilko_peskaDAT', host='johnny.heliohost.org', port=3306)
#sp_pars <- DBI::dbGetQuery(peskaDAT, 'SELECT * FROM species')
sp_pars <- RMySQL::dbReadTable(peskaDAT, "species")
sp_rows <- match(spp$species, sp_pars$species)
sp_rows[is.na(sp_rows)] <- match(999L, sp_pars$species)
## Flag suspect entries
tooshort <- spp$length > 0 & spp$length < sp_pars$minlength[sp_rows]
tooshort[is.na(tooshort)] <- FALSE
spp$flag[tooshort] <- 1L
toolong <- spp$length > sp_pars$maxlength[sp_rows]
toolong[is.na(toolong)] <- FALSE
spp$flag[toolong] <- 2L
get_weight <- function(a, b, l) a * l^b
unitwgt <- mapply(get_weight, sp_pars$a[sp_rows], sp_pars$b[sp_rows],  spp$length)
tooheavy <- unitwgt > sp_pars$maxweight[sp_rows] * 1.5
tooheavy[is.na(tooheavy)] <- FALSE
spp$flag[tooheavy & !toolong] <- 3L
unitwgt[spp$species == 45L] <- 50 # crab
unitwgt[spp$species == 24L] <- 1000 # octopus
unitwgt[spp$species == 50L] <- 6 # octopus
spp$weight_g <- round(spp$nfish * unitwgt)
spp$weight_g[spp$species == 0L] <- 0
invalidcombo <- trips$habitat %in% c(2, 5) & trips$gear == "BS"
trips$flag[invalidcombo] <- 8L
## Get old trips table and check for duplicates
trips1 <- RMySQL::dbReadTable(peskaDAT, "trips")
boats <- RMySQL::dbReadTable(peskaDAT, "boats")
indices <- match(PDS_trips$PDS_boat_no, boats$PDS_boat_no)
PDS_trips$IMEI <- boats$IMEI[indices]
PDS_trips$boat_type <- boats$boat_type[indices]#  1 = canoe, 2 = motor
PDS_trips$boat_type[is.na(PDS_trips$boat_type)] <- 1L
PDS_trips$station <- stations$station[match(boats$municipio_name[indices], stations$municipio_name)]
PDSTIMEI7 <- sub(".+(.{7})$", "\\1", PDS_trips$IMEI)
PDSTIMEI7 <- paste0(PDSTIMEI7, "-",PDS_trips$date)
PDS_trips$trip_id <- trips1$trip_id[match(PDSTIMEI7, paste0(trips1$IMEI, "-", trips1$date))]
indices <- which(is.na(PDS_trips$station) & !is.na(PDS_trips$trip_id))
stationcodes <- trips1$station[match(PDS_trips$trip_id[indices], trips1$trip_id)] ## should be none
PDS_trips$station[indices] <- stations$municipio[match(stationcodes, stations$station)]
tmp <- strsplit(PDS_points$latlng, split = ",")
PDS_points_full <- PDS_points
PDS_points_full$lat <- as.numeric(sapply(tmp, "[", 1))
PDS_points_full$lng <- as.numeric(sapply(tmp, "[", 2))
f <- factor(PDS_points_full$PDS_trip, levels = unique(PDS_points_full$PDS_trip))
lats <- split(PDS_points_full$lat, f = f)
lngs <- split(PDS_points_full$lng, f = f)
myfun <- function(v) v[round(seq(1, length(v), length.out = 10))]
newlats <- lapply(lats, myfun)
newlats <- do.call("rbind", newlats)
colnames(newlats) <- paste0("lat", 1:10)
newlngs <- lapply(lngs, myfun)
newlngs <- do.call("rbind", newlngs)
colnames(newlngs) <- paste0("lng", 1:10)
newcoords <- cbind(newlats, newlngs)
discard_trips <- trips$trip_id %in% trips1$trip_id
discard_spps <- spp$trip_id %in% trips$trip_id[discard_trips]
trips <- trips[!discard_trips, ]
spp <- spp[!discard_spps, ]
# Append new records
if(nrow(trips) > 0){
message("Appending new records")
RMySQL::dbWriteTable(peskaDAT, "trips", trips, append = TRUE, row.names=FALSE)
message("Successfully appended ", nrow(trips),  " new trip records")
if(nrow(spp) > 0){
RMySQL::dbWriteTable(peskaDAT, "landings", spp, append = TRUE, row.names=FALSE)
message("Successfully appended ", nrow(spp),  " new landings records")
}
}else{
message("No new records to append")
}
RMySQL::dbDisconnect(peskaDAT)
## split into PDS trips and points tables
pds_trips <- monthlys[c("PDS_trip", "date", "PDS_boat_no")]
pds_trips <- pds_trips[!duplicated(pds_trips$PDS_trip),] #25342
pds_points <- monthlys[c("PDS_trip", "latlng")]
pds_trips$date_numeric <- as.numeric(as.Date(pds_trips$date))
# pesksheet <- googlesheets::gs_key("13VGyuzLVaCU9vF8wNxwsAuz-SbIN3S6yRVvuJQUTK6I", visibility = "private")
# boats <- googlesheets::gs_read(pesksheet, ws = 1, col_types = "cicccidccdcccccccccc")
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user='wilko_sql1229113', password='R1fDe1QDB6',
dbname='wilko_peskaDAT', host='johnny.heliohost.org', port=3306)
boats  <- RMySQL::dbReadTable(peskaDAT, "boats")
stations  <- RMySQL::dbReadTable(peskaDAT, "stations")
trps  <- RMySQL::dbReadTable(peskaDAT, "trips")
lndgs <- RMySQL::dbReadTable(peskaDAT, "landings")
RMySQL::dbDisconnect(peskaDAT)
discards <- !(pds_trips$PDS_boat_no %in% boats$PDS_boat_no)
sum(discards)#1403
discard_trips <- pds_trips$PDS_trip[discards]
pds_trips <- pds_trips[!discards, ]
discard_points <- pds_points$PDS_trip %in% discard_trips
pds_points <- pds_points[!discard_points, ] #1082091
indices <- match(pds_trips$PDS_boat_no, boats$PDS_boat_no) #1403/25342 NAs
pds_trips$IMEI <- boats$IMEI[indices]
pds_trips$boat_type <- boats$boat_type[indices]#  1 = canoe, 2 = motor
pds_trips$station <- stations$station[match(boats$municipio_name[indices], stations$municipio_name)]
discards <- is.na(pds_trips$IMEI) | is.na(pds_trips$boat_type) | is.na(pds_trips$station)
sum(discards) #1268
discard_trips <- pds_trips$PDS_trip[discards]
pds_trips <- pds_trips[!discards, ] #22671
discard_points <- pds_points$PDS_trip %in% discard_trips
pds_points <- pds_points[!discard_points, ] #1005597
PDSTIMEI7 <- sub(".+(.{7})$", "\\1", pds_trips$IMEI)
PDSTIMEI7 <- paste0(PDSTIMEI7, "-",pds_trips$date)
indices <- match(PDSTIMEI7, paste0(trps$IMEI, "-", trps$date))
sum(duplicated(indices))
?duplicated
tail(indices, 200)
sum(duplicated(indices[!is.na(indices)]))
sum(!is.na(indices))
sort(table(indices[!is.na(indices)]))
sum(table(indices[!is.na(indices)]) == 1)
View(monthlys)
indtab <- sort(table(indices[!is.na(indices)]))
names(indtab)[indtab == 1]
linkable_rows <- as.integer(names(indtab)[indtab == 1]) # row numbers in kobo trip table
linkable_rows
c(NA, 1) %in% 1
sum(is.na(indices)) #1047
indices[!indices %in% linkable_rows] <- NA
sum(is.na(indices)) #1047
sum(!is.na(indices)) #1047
pds_trips$trip_id <- trps$trip_id[indices]
indices <- which(is.na(pds_trips$station) & !is.na(pds_trips$trip_id))
stationcodes <- trps$station[match(pds_trips$trip_id[indices], trps$trip_id)] ## should be none
pds_trips$station[indices] <- stations$municipio[match(stationcodes, stations$station)]
View(pds_trips)
View(pds_points)
tmp <- strsplit(pds_points$latlng, split = ",")
PDS_points_full <- pds_points
PDS_points_full$lat <- as.numeric(sapply(tmp, "[", 1))
PDS_points_full$lng <- as.numeric(sapply(tmp, "[", 2))
f <- factor(PDS_points_full$PDS_trip, levels = unique(PDS_points_full$PDS_trip))
lats <- split(PDS_points_full$lat, f = f)
lngs <- split(PDS_points_full$lng, f = f)
myfun <- function(v) v[round(seq(1, length(v), length.out = 10))]
newlats <- lapply(lats, myfun)
newlats <- do.call("rbind", newlats)
colnames(newlats) <- paste0("lat", 1:10)
newlngs <- lapply(lngs, myfun)
newlngs <- do.call("rbind", newlngs)
colnames(newlngs) <- paste0("lng", 1:10)
newcoords <- cbind(newlats, newlngs)
## find nearest neighbors
nnobj <- RANN::nn2(newcoords[!is.na(pds_trips$trip_id), ], newcoords[is.na(pds_trips$trip_id),], k = 1)
## insert known gears and habitats into pds trip table
linked_tripids <- pds_trips$trip_id[!is.na(pds_trips$trip_id)]
linked_tripids
linked_gears <- trps$gear[match(linked_tripids, trps$trip_id)]
names(linked_gears) <- linked_tripids
linked_habs <- trps$habitat[match(linked_tripids, trps$trip_id)]
names(linked_habs) <- linked_tripids
linked_stations <- trps$station[match(linked_tripids, trps$trip_id)]
names(linked_stations) <- linked_tripids
linked_boats <- trps$boat_type[match(linked_tripids, trps$trip_id)]
names(linked_boats) <- linked_tripids
indices <- match(linked_tripids, pds_trips$trip_id)
pds_trips$gear <- NA
pds_trips$gear[indices] <- trps$gear[match(linked_tripids, trps$trip_id)]
pds_trips$habitat <- NA
pds_trips$habitat[indices] <- trps$habitat[match(linked_tripids, trps$trip_id)]
View(pds_trips)
## insert unknown gears and habitats into pds trip table
donors <- linked_tripids[nnobj$nn.idx]
## insert unknown gears and habitats into pds trip table
donors <- linked_tripids[nnobj$nn.idx]
View(PDS_trips)
dists <-nnobj$nn.dists
hist(dists)
pds_trips$gear[is.na(pds_trips$trip_id)] <- linked_gears[donors]
pds_trips$habitat[is.na(pds_trips$trip_id)] <- linked_habs[donors]
length(linked_stations[donors])
length(pds_trips$station[is.na(pds_trips$trip_id)])
#tmp <- pds_trips$station
pds_trips$station[is.na(pds_trips$trip_id)] <- linked_stations[donors]
#pds_trips$station[!is.na(tmp)]
tmp <- pds_trips$boat_type
pds_trips$boat_type[is.na(pds_trips$trip_id)] <- linked_boats[donors]
pds_trips$boat_type[!is.na(tmp)] <- tmp[!is.na(tmp)]
PDS_trips$donor_tripid <- NA
PDS_trips$donor_distance <- NA
length(PDS_trips$trip_id[indices])
length(PDS_trips$donor_tripid[indices])
PDS_trips$donor_tripid[indices] <- PDS_trips$trip_id[indices]
PDS_trips$donor_distance[indices] <- 0
PDS_trips$donor_tripid[is.na(PDS_trips$trip_id)] <- donors
length(donors <- linked_tripids[nnobj$nn.idx] )
length(linked_tripids[nnobj$nn.idx])
pds_trips$donor_tripid <- NA
pds_trips$donor_distance <- NA
pds_trips$donor_tripid[indices] <- pds_trips$trip_id[indices]
pds_trips$donor_distance[indices] <- 0
pds_trips$donor_tripid[is.na(pds_trips$trip_id)] <- donors
pds_trips$donor_distance[is.na(pds_trips$trip_id)] <- nnobj$nn.dists[, 1]
dim(newcoords)
pds_trips <- cbind(pds_trips, newcoords)
## benchmark nn assignment for gear and hab
linked_tripids <- pds_trips$trip_id[!is.na(pds_trips$trip_id)]
set.seed(999)
trainingtrips <- sample(linked_tripids, size = round(length(linked_tripids)*0.8))
querytrips <- linked_tripids[!linked_tripids %in% trainingtrips]
newcoords <- pds_trips[seq(match("lat1", colnames(pds_trips)), ncol(pds_trips))]
trainingdata <- newcoords[match(trainingtrips, pds_trips$trip_id), ]
rownames(trainingdata) <- trainingtrips ### #duplicates??
querydata <- newcoords[match(querytrips, pds_trips$trip_id),]
rownames(querydata) <- querytrips
traininggears <- trps$gear[match(trainingtrips, trps$trip_id)]
names(traininggears) <- trainingtrips
querygears <- trps$gear[match(querytrips, trps$trip_id)]
names(querygears) <- querytrips
traininghabs <- trps$habitat[match(trainingtrips, trps$trip_id)]
names(traininghabs) <- trainingtrips
queryhabs <- trps$habitat[match(querytrips, trps$trip_id)]
names(queryhabs) <- querytrips
nnobj2 <- RANN::nn2(trainingdata, querydata, k = 1)
hist(nnobj$nn.dists)
donors <- trainingtrips[nnobj2$nn.idx]
sum(unname(queryhabs) == unname(traininghabs[donors]))/length(queryhabs) ##0.8875
sum(unname(querygears) == unname(traininggears[donors]))/length(querygears) ## 0.7625
tmp <- pds_trips
pds_trips <- pds_trips[pds_trips$donor_distance < 0.2,]
## benchmark nn assignment for gear and hab
linked_tripids <- pds_trips$trip_id[!is.na(pds_trips$trip_id)]
set.seed(999)
trainingtrips <- sample(linked_tripids, size = round(length(linked_tripids)*0.8))
querytrips <- linked_tripids[!linked_tripids %in% trainingtrips]
newcoords <- pds_trips[seq(match("lat1", colnames(pds_trips)), ncol(pds_trips))]
trainingdata <- newcoords[match(trainingtrips, pds_trips$trip_id), ]
rownames(trainingdata) <- trainingtrips ### #duplicates??
querydata <- newcoords[match(querytrips, pds_trips$trip_id),]
rownames(querydata) <- querytrips
traininggears <- trps$gear[match(trainingtrips, trps$trip_id)]
names(traininggears) <- trainingtrips
querygears <- trps$gear[match(querytrips, trps$trip_id)]
names(querygears) <- querytrips
traininghabs <- trps$habitat[match(trainingtrips, trps$trip_id)]
names(traininghabs) <- trainingtrips
queryhabs <- trps$habitat[match(querytrips, trps$trip_id)]
names(queryhabs) <- querytrips
nnobj2 <- RANN::nn2(trainingdata, querydata, k = 1)
hist(nnobj$nn.dists)
donors <- trainingtrips[nnobj2$nn.idx]
sum(unname(queryhabs) == unname(traininghabs[donors]))/length(queryhabs) ##0.8536585
sum(unname(querygears) == unname(traininggears[donors]))/length(querygears) ## 804878
pds_trips <- tmp
discards <- pds_trips$donor_distance > 0.2
sum(discards)
discard_trips <- pds_trips$PDS_trip[discards]
pds_trips <- pds_trips[!discards, ] #22671
discard_points <- pds_points$PDS_trip %in% discard_trips
pds_points <- pds_points[!discard_points, ] #1005597
View(pds_trips)
getwd()
saveRDS(pds_trips, file = "data/PDS_trips.rds")
saveRDS(pds_points, file = "data/PDS_points.rds")
max(pds_trips$date_numeric)
shp_df <- readRDS("data/shape.rds")
pds_trips <- readRDS("data/PDS_trips.rds")
pds_points <- readRDS("data/PDS_points.rds")
max_date_numeric <- max(pds_trips$date_numeric)
peskaDAT = RMySQL::dbConnect(RMySQL::MySQL(), user='wilko_PDS', password='pelagic',
dbname='wilko_peskaDAT', host='johnny.heliohost.org', port=3306)
lndgs <- RMySQL::dbReadTable(peskaDAT, "landings")
trps <- RMySQL::dbReadTable(peskaDAT, "trips")
munis <- RMySQL::dbReadTable(peskaDAT, "municipalities")
stns <- RMySQL::dbReadTable(peskaDAT, "stations")
spcs <-  RMySQL::dbReadTable(peskaDAT, "species")
q1 <- paste0('SELECT * FROM PDS_trips WHERE date_numeric > ', max_date_numeric)
q2 <- paste0('SELECT * FROM PDS_points WHERE PDS_trip IN ( SELECT PDS_trip FROM PDS_trips WHERE date_numeric > ',
max_date_numeric, ' )')
pdstrps <- DBI::dbGetQuery(peskaDAT, q1)
pdspts <- DBI::dbGetQuery(peskaDAT, q2)
#geos <- RMySQL::dbReadTable(peskaDAT, "geo")
RMySQL::dbDisconnect(peskaDAT)
pds_trips <- rbind(pds_trips, pdstrps)
pds_points <- rbind(pds_points, pdspts)
pds_trips$date <- as.Date(pds_trips$date)
pds_trips$gear <- match(pds_trips$gear, c("GN", "HL", "LL", "SG", "CN", "MC", "BS", "SN", "TP"))
discards <- is.na(pds_trips$boat_type)
discard_trips <- pds_trips$PDS_trip[discards]
shiny::runApp()
runApp()
q()
